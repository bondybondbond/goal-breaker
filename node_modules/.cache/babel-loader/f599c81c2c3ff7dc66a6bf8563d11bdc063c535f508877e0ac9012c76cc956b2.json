{"ast":null,"code":"// Level styling system - borders only, intensity increases with level\nexport const getLevelStyle=(level,completed)=>{const levelStyles=[{border:\"border-yellow-400\",borderWidth:\"border-4\",color:\"text-yellow-600\"},// Ultimate goal\n{border:\"border-blue-300\",borderWidth:\"border-2\",color:\"text-blue-500\"},{border:\"border-purple-400\",borderWidth:\"border-[3px]\",color:\"text-purple-600\"},{border:\"border-green-400\",borderWidth:\"border-[3px]\",color:\"text-green-600\"},{border:\"border-orange-400\",borderWidth:\"border-[4px]\",color:\"text-orange-600\"},{border:\"border-pink-400\",borderWidth:\"border-[4px]\",color:\"text-pink-600\"},{border:\"border-red-400\",borderWidth:\"border-[4px]\",color:\"text-red-600\"},{border:\"border-indigo-500\",borderWidth:\"border-[5px]\",color:\"text-indigo-700\"}];const style=levelStyles[Math.min(level,levelStyles.length-1)];if(completed){return{border:\"border-green-400\",borderWidth:style.borderWidth,bg:\"bg-green-100\",color:\"text-green-700\"};}return{border:style.border,borderWidth:style.borderWidth,bg:\"bg-white\",color:style.color};};export const getGoalStyle=(goal,isPanning,isDragged)=>{const levelStyle=getLevelStyle(goal.level,goal.completed);const baseStyle=\"absolute rounded-xl shadow-lg transition-all duration-300 hover:shadow-xl hover:scale-[1.02] select-none\";const cursorStyle=isPanning?\"cursor-grab\":goal.isEditing?\"cursor-text\":\"cursor-move\";return\"\".concat(baseStyle,\" \").concat(levelStyle.bg,\" \").concat(levelStyle.border,\" \").concat(levelStyle.borderWidth,\" \").concat(cursorStyle);};export const getLevelStats=(level,goals)=>{const levelGoals=goals.filter(g=>g.level===level);const completed=levelGoals.filter(g=>g.completed).length;return{total:levelGoals.length,completed};};export const getLevelLabel=level=>{if(level===0)return\"üéØ Ultimate Goal\";const labels=[\"üó∫Ô∏è Strategy\",\"‚ö° Tactics\",\"üé¨ Actions\",\"üìã Tasks\",\"üë£ Steps\",\"üîç Details\",\"‚öôÔ∏è Micro\"];return labels[level-1]||\"\\uD83D\\uDCCD Level \".concat(level);};","map":{"version":3,"names":["getLevelStyle","level","completed","levelStyles","border","borderWidth","color","style","Math","min","length","bg","getGoalStyle","goal","isPanning","isDragged","levelStyle","baseStyle","cursorStyle","isEditing","concat","getLevelStats","goals","levelGoals","filter","g","total","getLevelLabel","labels"],"sources":["C:/apps/goal-breaker/src/utils/styleHelpers.ts"],"sourcesContent":["import { LevelStyle, Goal, LevelStats } from \"../types/goal.types\";\r\n\r\n// Level styling system - borders only, intensity increases with level\r\nexport const getLevelStyle = (level: number, completed: boolean): LevelStyle => {\r\n  const levelStyles = [\r\n    { border: \"border-yellow-400\", borderWidth: \"border-4\", color: \"text-yellow-600\" }, // Ultimate goal\r\n    { border: \"border-blue-300\", borderWidth: \"border-2\", color: \"text-blue-500\" },\r\n    { border: \"border-purple-400\", borderWidth: \"border-[3px]\", color: \"text-purple-600\" },\r\n    { border: \"border-green-400\", borderWidth: \"border-[3px]\", color: \"text-green-600\" },\r\n    { border: \"border-orange-400\", borderWidth: \"border-[4px]\", color: \"text-orange-600\" },\r\n    { border: \"border-pink-400\", borderWidth: \"border-[4px]\", color: \"text-pink-600\" },\r\n    { border: \"border-red-400\", borderWidth: \"border-[4px]\", color: \"text-red-600\" },\r\n    { border: \"border-indigo-500\", borderWidth: \"border-[5px]\", color: \"text-indigo-700\" }\r\n  ];\r\n\r\n  const style = levelStyles[Math.min(level, levelStyles.length - 1)];\r\n\r\n  if (completed) {\r\n    return {\r\n      border: \"border-green-400\",\r\n      borderWidth: style.borderWidth,\r\n      bg: \"bg-green-100\",\r\n      color: \"text-green-700\"\r\n    };\r\n  }\r\n\r\n  return {\r\n    border: style.border,\r\n    borderWidth: style.borderWidth,\r\n    bg: \"bg-white\",\r\n    color: style.color\r\n  };\r\n};\r\n\r\nexport const getGoalStyle = (goal: Goal, isPanning: boolean, isDragged: boolean): string => {\r\n  const levelStyle = getLevelStyle(goal.level, goal.completed);\r\n  const baseStyle = \"absolute rounded-xl shadow-lg transition-all duration-300 hover:shadow-xl hover:scale-[1.02] select-none\";\r\n  const cursorStyle = isPanning ? \"cursor-grab\" : (goal.isEditing ? \"cursor-text\" : \"cursor-move\");\r\n  \r\n  return `${baseStyle} ${levelStyle.bg} ${levelStyle.border} ${levelStyle.borderWidth} ${cursorStyle}`;\r\n};\r\n\r\nexport const getLevelStats = (level: number, goals: Goal[]): LevelStats => {\r\n  const levelGoals = goals.filter(g => g.level === level);\r\n  const completed = levelGoals.filter(g => g.completed).length;\r\n  \r\n  return {\r\n    total: levelGoals.length,\r\n    completed\r\n  };\r\n};\r\n\r\nexport const getLevelLabel = (level: number): string => {\r\n  if (level === 0) return \"üéØ Ultimate Goal\";\r\n  \r\n  const labels = [\r\n    \"üó∫Ô∏è Strategy\", \r\n    \"‚ö° Tactics\", \r\n    \"üé¨ Actions\", \r\n    \"üìã Tasks\", \r\n    \"üë£ Steps\", \r\n    \"üîç Details\", \r\n    \"‚öôÔ∏è Micro\"\r\n  ];\r\n  \r\n  return labels[level - 1] || `üìç Level ${level}`;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}