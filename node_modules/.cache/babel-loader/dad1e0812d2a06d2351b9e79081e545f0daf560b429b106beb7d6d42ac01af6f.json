{"ast":null,"code":"var _jsxFileName = \"C:\\\\apps\\\\goal-breaker\\\\src\\\\components\\\\ConnectionLines.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ConnectionLines = ({\n  connections,\n  canvasSize\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"absolute top-0 left-0 w-full h-full pointer-events-none z-0\",\n    style: {\n      width: canvasSize.width,\n      height: canvasSize.height\n    },\n    children: connections.map(conn => /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: conn.path,\n        stroke: conn.completed ? \"#10b981\" : \"#6b7280\",\n        strokeWidth: \"2\",\n        fill: \"none\",\n        className: \"transition-all duration-300\",\n        strokeDasharray: conn.completed ? \"0\" : \"5,5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: conn.from.x,\n        cy: conn.from.y,\n        r: \"3\",\n        fill: conn.completed ? \"#10b981\" : \"#6b7280\",\n        className: \"transition-all duration-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), conn.type === 'placeholder' ?\n      /*#__PURE__*/\n      /* Placeholder indicator with count */\n      _jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: conn.to.x,\n          cy: conn.to.y,\n          r: \"12\",\n          fill: \"#f3f4f6\",\n          stroke: \"#9ca3af\",\n          strokeWidth: \"2\",\n          className: \"transition-all duration-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: conn.to.x,\n          y: conn.to.y + 1,\n          textAnchor: \"middle\",\n          dominantBaseline: \"middle\",\n          className: \"text-xs font-medium fill-gray-600\",\n          style: {\n            fontSize: '10px'\n          },\n          children: conn.hiddenCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this) :\n      /*#__PURE__*/\n      /* Normal connection point on child (right side) */\n      _jsxDEV(\"circle\", {\n        cx: conn.to.x,\n        cy: conn.to.y,\n        r: \"3\",\n        fill: conn.completed ? \"#10b981\" : \"#6b7280\",\n        className: \"transition-all duration-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, conn.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = ConnectionLines;\nvar _c;\n$RefreshReg$(_c, \"ConnectionLines\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ConnectionLines","connections","canvasSize","className","style","width","height","children","map","conn","d","path","stroke","completed","strokeWidth","fill","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","cx","from","x","cy","y","r","type","to","textAnchor","dominantBaseline","fontSize","hiddenCount","id","_c","$RefreshReg$"],"sources":["C:/apps/goal-breaker/src/components/ConnectionLines.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Connection } from \"../types/goal.types\";\r\n\r\ninterface ConnectionLinesProps {\r\n  connections: Connection[];\r\n  canvasSize: { width: number; height: number };\r\n}\r\n\r\nexport const ConnectionLines: React.FC<ConnectionLinesProps> = ({ connections, canvasSize }) => {\r\n  return (\r\n    <svg\r\n      className=\"absolute top-0 left-0 w-full h-full pointer-events-none z-0\"\r\n      style={{ width: canvasSize.width, height: canvasSize.height }}\r\n    >\r\n      {connections.map(conn => (\r\n        <g key={conn.id}>\r\n          <path\r\n            d={conn.path}\r\n            stroke={conn.completed ? \"#10b981\" : \"#6b7280\"}\r\n            strokeWidth=\"2\"\r\n            fill=\"none\"\r\n            className=\"transition-all duration-300\"\r\n            strokeDasharray={conn.completed ? \"0\" : \"5,5\"}\r\n          />\r\n          {/* Connection point on parent (left side) */}\r\n          <circle\r\n            cx={conn.from.x}\r\n            cy={conn.from.y}\r\n            r=\"3\"\r\n            fill={conn.completed ? \"#10b981\" : \"#6b7280\"}\r\n            className=\"transition-all duration-300\"\r\n          />\r\n          \r\n          {/* Different rendering for placeholder vs normal connections */}\r\n          {conn.type === 'placeholder' ? (\r\n            /* Placeholder indicator with count */\r\n            <g>\r\n              <circle\r\n                cx={conn.to.x}\r\n                cy={conn.to.y}\r\n                r=\"12\"\r\n                fill=\"#f3f4f6\"\r\n                stroke=\"#9ca3af\"\r\n                strokeWidth=\"2\"\r\n                className=\"transition-all duration-300\"\r\n              />\r\n              <text\r\n                x={conn.to.x}\r\n                y={conn.to.y + 1}\r\n                textAnchor=\"middle\"\r\n                dominantBaseline=\"middle\"\r\n                className=\"text-xs font-medium fill-gray-600\"\r\n                style={{ fontSize: '10px' }}\r\n              >\r\n                {conn.hiddenCount}\r\n              </text>\r\n            </g>\r\n          ) : (\r\n            /* Normal connection point on child (right side) */\r\n            <circle\r\n              cx={conn.to.x}\r\n              cy={conn.to.y}\r\n              r=\"3\"\r\n              fill={conn.completed ? \"#10b981\" : \"#6b7280\"}\r\n              className=\"transition-all duration-300\"\r\n            />\r\n          )}\r\n        </g>\r\n      ))}\r\n    </svg>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}