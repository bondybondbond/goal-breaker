{"ast":null,"code":"var _jsxFileName = \"C:\\\\apps\\\\goal-breaker\\\\src\\\\components\\\\GoalBreakdown\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Plus, Check, X, Target, Eye, EyeOff, Focus } from 'lucide-react';\nimport { ConnectionLines } from '../ConnectionLines';\nimport { GRID } from '../../utils/gridHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoalBreaker = () => {\n  _s();\n  const [goals, setGoals] = useState([]);\n  const [mainGoal, setMainGoal] = useState('');\n  const [isStarted, setIsStarted] = useState(false);\n  const [currentView, setCurrentView] = useState('canvas'); // 'canvas' or 'list'\n  const [draggedGoal, setDraggedGoal] = useState(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [connections, setConnections] = useState([]);\n  const [hiddenLevels, setHiddenLevels] = useState(new Set());\n  const [focusedGoal, setFocusedGoal] = useState(null);\n  const [canvasOffset, setCanvasOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isPanning, setIsPanning] = useState(false);\n  const [panStart, setPanStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [spacePressed, setSpacePressed] = useState(false);\n  const canvasRef = useRef(null);\n  const [canvasSize, setCanvasSize] = useState({\n    width: 2000,\n    height: 1200\n  });\n\n  // Initialize with empty state - user defines problem directly on canvas\n  useEffect(() => {\n    if (!isStarted) {\n      setIsStarted(true);\n      // Center the canvas so main goal area is immediately visible\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight - 80; // Account for header\n      const centerX = viewportWidth / 2 - GRID.CARD_WIDTH / 2;\n      const centerY = viewportHeight / 2 - GRID.CARD_HEIGHT / 2;\n      setCanvasOffset({\n        x: centerX - (canvasSize.width - GRID.MARGIN - GRID.CARD_WIDTH),\n        y: centerY - (GRID.MARGIN + GRID.CARD_HEIGHT / 2)\n      });\n    }\n  }, []);\n\n  // Level styling system - borders only, intensity increases with level\n  const getLevelStyle = (level, completed) => {\n    const levelStyles = [{\n      border: 'border-yellow-400',\n      borderWidth: 'border-4',\n      color: 'text-yellow-600'\n    },\n    // Ultimate goal\n    {\n      border: 'border-blue-300',\n      borderWidth: 'border-2',\n      color: 'text-blue-500'\n    }, {\n      border: 'border-purple-400',\n      borderWidth: 'border-[3px]',\n      color: 'text-purple-600'\n    }, {\n      border: 'border-green-400',\n      borderWidth: 'border-[3px]',\n      color: 'text-green-600'\n    }, {\n      border: 'border-orange-400',\n      borderWidth: 'border-[4px]',\n      color: 'text-orange-600'\n    }, {\n      border: 'border-pink-400',\n      borderWidth: 'border-[4px]',\n      color: 'text-pink-600'\n    }, {\n      border: 'border-red-400',\n      borderWidth: 'border-[4px]',\n      color: 'text-red-600'\n    }, {\n      border: 'border-indigo-500',\n      borderWidth: 'border-[5px]',\n      color: 'text-indigo-700'\n    }];\n    const style = levelStyles[Math.min(level, levelStyles.length - 1)];\n    if (completed) {\n      return {\n        border: 'border-green-500',\n        borderWidth: style.borderWidth,\n        bg: 'bg-green-100',\n        color: 'text-green-800'\n      };\n    }\n    return {\n      border: style.border,\n      borderWidth: style.borderWidth,\n      bg: 'bg-white',\n      color: style.color\n    };\n  };\n\n  // Convert grid coordinates to pixel position\n  const gridToPosition = (level, row) => {\n    const x = canvasSize.width - GRID.MARGIN - level * GRID.COLUMN_WIDTH - GRID.CARD_WIDTH;\n    const y = GRID.MARGIN + row * GRID.ROW_HEIGHT;\n    return {\n      x: Math.max(GRID.MARGIN, x),\n      y: Math.max(GRID.MARGIN, y)\n    };\n  };\n\n  // Get next available row for a level\n  const getNextRowForLevel = level => {\n    const levelGoals = goals.filter(g => g.level === level);\n    if (levelGoals.length === 0) return 0;\n    const occupiedRows = levelGoals.map(g => g.gridRow).sort((a, b) => a - b);\n    let nextRow = 0;\n    for (const row of occupiedRows) {\n      if (row === nextRow) {\n        nextRow++;\n      } else {\n        break;\n      }\n    }\n    return nextRow;\n  };\n\n  // Add sub-goal with grid positioning\n  const addSubGoal = parentId => {\n    const parent = goals.find(g => g.id === parentId);\n    if (!parent) return;\n    const newId = Math.max(0, ...goals.map(g => g.id)) + 1;\n    const newLevel = parent.level + 1;\n    const newRow = getNextRowForLevel(newLevel);\n    const newPosition = gridToPosition(newLevel, newRow);\n    const newGoal = {\n      id: newId,\n      text: '',\n      completed: false,\n      level: newLevel,\n      gridRow: newRow,\n      parentId: parentId,\n      position: newPosition,\n      isEditing: true,\n      children: []\n    };\n    setGoals(prev => [...prev, newGoal]);\n  };\n  const updateGoal = (id, text) => {\n    setGoals(goals.map(goal => goal.id === id ? {\n      ...goal,\n      text,\n      isEditing: false\n    } : goal));\n  };\n  const startEditing = id => {\n    setGoals(goals.map(goal => goal.id === id ? {\n      ...goal,\n      isEditing: true\n    } : goal));\n  };\n  const toggleComplete = id => {\n    setGoals(goals.map(goal => goal.id === id ? {\n      ...goal,\n      completed: !goal.completed\n    } : goal));\n  };\n  const deleteGoal = id => {\n    setGoals(goals.filter(goal => goal.id !== id && goal.parentId !== id));\n  };\n  const reset = () => {\n    setGoals([]);\n    setMainGoal('');\n    setCanvasOffset({\n      x: 0,\n      y: 0\n    });\n  };\n  const getLevelStats = level => {\n    const levelGoals = goals.filter(g => g.level === level);\n    const completed = levelGoals.filter(g => g.completed).length;\n    return {\n      total: levelGoals.length,\n      completed\n    };\n  };\n  const getLevelLabel = level => {\n    if (level === 0) return '🎯 Ultimate Goal';\n    const labels = ['📋 Strategy', '🎯 Tactics', '⚡ Actions', '📝 Tasks', '✅ Steps', '🔍 Details', '💡 Micro'];\n    return labels[level - 1] || `📌 Level ${level}`;\n  };\n  const toggleLevelVisibility = level => {\n    const newHidden = new Set(hiddenLevels);\n    if (newHidden.has(level)) {\n      newHidden.delete(level);\n    } else {\n      newHidden.add(level);\n    }\n    setHiddenLevels(newHidden);\n  };\n  const toggleFocus = goalId => {\n    setFocusedGoal(focusedGoal === goalId ? null : goalId);\n  };\n  const existingLevels = [...new Set(goals.map(g => g.level))].sort((a, b) => a - b);\n\n  // Get visible goals based on focus and hidden levels\n  const getVisibleGoals = () => {\n    let visibleGoals = goals.filter(goal => !hiddenLevels.has(goal.level));\n    if (focusedGoal) {\n      const focusedGoalData = goals.find(g => g.id === focusedGoal);\n      if (focusedGoalData) {\n        const relatedGoals = new Set();\n\n        // Add focused goal and its ancestors\n        let current = focusedGoalData;\n        while (current) {\n          relatedGoals.add(current.id);\n          current = goals.find(g => g.id === current.parentId);\n        }\n\n        // Add all descendants\n        const addDescendants = goalId => {\n          const children = goals.filter(g => g.parentId === goalId);\n          children.forEach(child => {\n            relatedGoals.add(child.id);\n            addDescendants(child.id);\n          });\n        };\n        addDescendants(focusedGoal);\n        visibleGoals = visibleGoals.filter(goal => relatedGoals.has(goal.id));\n      }\n    }\n    return visibleGoals;\n  };\n\n  // Canvas event handlers\n  const handleCanvasMouseDown = e => {\n    // Only start panning if clicking on canvas background, not on a goal\n    if (e.target === canvasRef.current || e.target.closest('.canvas-background')) {\n      setIsPanning(true);\n      setPanStart({\n        x: e.clientX,\n        y: e.clientY\n      });\n      e.preventDefault();\n    }\n  };\n  const handleCanvasMouseMove = e => {\n    if (isPanning) {\n      const deltaX = e.clientX - panStart.x;\n      const deltaY = e.clientY - panStart.y;\n      setCanvasOffset(prev => ({\n        x: prev.x + deltaX,\n        y: prev.y + deltaY\n      }));\n      setPanStart({\n        x: e.clientX,\n        y: e.clientY\n      });\n    } else if (draggedGoal) {\n      // Update dragged goal position\n      const canvasRect = canvasRef.current.getBoundingClientRect();\n      const newX = e.clientX - canvasRect.left - canvasOffset.x - dragOffset.x;\n      const newY = e.clientY - canvasRect.top - canvasOffset.y - dragOffset.y;\n      setGoals(prev => prev.map(goal => goal.id === draggedGoal.id ? {\n        ...goal,\n        position: {\n          x: newX,\n          y: newY\n        }\n      } : goal));\n    }\n  };\n  const handleCanvasMouseUp = () => {\n    setIsPanning(false);\n    setDraggedGoal(null);\n  };\n  const handleCanvasKeyDown = e => {\n    if (e.code === 'Space') {\n      setSpacePressed(true);\n      e.preventDefault();\n    }\n  };\n  const handleCanvasKeyUp = e => {\n    if (e.code === 'Space') {\n      setSpacePressed(false);\n      e.preventDefault();\n    }\n  };\n  const handleGoalDragStart = (goal, e) => {\n    // Prevent canvas panning when starting to drag a goal\n    e.stopPropagation();\n    const canvasRect = canvasRef.current.getBoundingClientRect();\n    const goalRect = e.currentTarget.getBoundingClientRect();\n    setDraggedGoal(goal);\n    setDragOffset({\n      x: e.clientX - goalRect.left,\n      y: e.clientY - goalRect.top\n    });\n\n    // Prevent text selection during drag\n    e.preventDefault();\n  };\n\n  // Global mouse event handlers for drag and drop\n  useEffect(() => {\n    const handleGlobalMouseMove = e => {\n      if (draggedGoal && canvasRef.current) {\n        const canvasRect = canvasRef.current.getBoundingClientRect();\n        const newX = e.clientX - canvasRect.left - canvasOffset.x - dragOffset.x;\n        const newY = e.clientY - canvasRect.top - canvasOffset.y - dragOffset.y;\n        setGoals(prev => prev.map(goal => goal.id === draggedGoal.id ? {\n          ...goal,\n          position: {\n            x: newX,\n            y: newY\n          }\n        } : goal));\n      }\n    };\n    const handleGlobalMouseUp = () => {\n      setDraggedGoal(null);\n      setIsPanning(false);\n    };\n    if (draggedGoal || isPanning) {\n      document.addEventListener('mousemove', handleGlobalMouseMove);\n      document.addEventListener('mouseup', handleGlobalMouseUp);\n      return () => {\n        document.removeEventListener('mousemove', handleGlobalMouseMove);\n        document.removeEventListener('mouseup', handleGlobalMouseUp);\n      };\n    }\n  }, [draggedGoal, isPanning, canvasOffset, dragOffset]);\n  useEffect(() => {\n    const newConnections = [];\n    goals.forEach(goal => {\n      if (goal.parentId !== null) {\n        const parent = goals.find(g => g.id === goal.parentId);\n        if (parent) {\n          const fromX = parent.position.x + GRID.CARD_WIDTH / 2;\n          const fromY = parent.position.y + GRID.CARD_HEIGHT;\n          const toX = goal.position.x + GRID.CARD_WIDTH / 2;\n          const toY = goal.position.y;\n\n          // Create curved connection line\n          const midX = fromX + (toX - fromX) / 2;\n          const midY = fromY + (toY - fromY) / 2;\n          const curveOffset = Math.abs(toX - fromX) * 0.3;\n          newConnections.push({\n            id: `${parent.id}-${goal.id}`,\n            from: {\n              x: fromX,\n              y: fromY\n            },\n            to: {\n              x: toX,\n              y: toY\n            },\n            completed: parent.completed && goal.completed,\n            path: `M ${fromX} ${fromY} Q ${midX} ${midY - curveOffset} ${toX} ${toY}`\n          });\n        }\n      }\n    });\n    setConnections(newConnections);\n  }, [goals, GRID.CARD_WIDTH, GRID.CARD_HEIGHT]);\n\n  // GoalCard component\n  const GoalCard = ({\n    goal,\n    onUpdate,\n    onToggleComplete,\n    onAddSubGoal,\n    onDelete,\n    onStartEditing,\n    onToggleFocus,\n    isFocused,\n    isDragged,\n    onDragStart\n  }) => {\n    const levelStyle = getLevelStyle(goal.level, goal.completed);\n    const handleMouseDown = e => {\n      // Only start dragging if not clicking on interactive elements\n      const target = e.target;\n      if (target.tagName === 'BUTTON' || target.tagName === 'INPUT' || target.tagName === 'TEXTAREA') {\n        return;\n      }\n\n      // Don't start drag if goal is in editing mode\n      if (goal.isEditing) {\n        return;\n      }\n      onDragStart(goal, e);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `absolute bg-white rounded-xl shadow-lg transition-all duration-300 hover:shadow-xl cursor-move ${levelStyle.border} ${levelStyle.borderWidth} ${levelStyle.bg} ${isDragged ? 'scale-105 rotate-2 z-50' : ''} ${isFocused ? 'ring-4 ring-blue-300' : ''}`,\n      style: {\n        left: goal.position.x,\n        top: goal.position.y,\n        width: GRID.CARD_WIDTH,\n        height: GRID.CARD_HEIGHT,\n        zIndex: isDragged ? 50 : isFocused ? 30 : 10,\n        userSelect: 'none'\n      },\n      onMouseDown: handleMouseDown,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 h-full flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-start mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onToggleComplete(goal.id),\n              className: `p-1.5 rounded-full transition-all ${goal.completed ? 'bg-green-500 text-white scale-110' : 'bg-gray-100 border-2 border-gray-300 hover:border-green-400 hover:bg-green-50'}`,\n              children: /*#__PURE__*/_jsxDEV(Check, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `text-xs font-medium px-2 py-1 rounded-full ${levelStyle.color} bg-opacity-20`,\n              children: [\"L\", goal.level]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onToggleFocus(goal.id),\n              className: `p-1.5 rounded-full transition-all ${isFocused ? 'bg-blue-500 text-white' : 'text-gray-400 hover:bg-gray-100 hover:text-blue-500'}`,\n              children: /*#__PURE__*/_jsxDEV(Focus, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onAddSubGoal(goal.id),\n              className: \"p-1.5 rounded-full text-purple-500 hover:bg-purple-100 transition-all\",\n              children: /*#__PURE__*/_jsxDEV(Plus, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), goal.level > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onDelete(goal.id),\n              className: \"p-1.5 rounded-full text-red-500 hover:bg-red-100 transition-all\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center\",\n          children: goal.isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n            defaultValue: goal.text,\n            className: \"w-full h-16 p-2 border border-gray-200 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm\",\n            placeholder: goal.level === 0 ? \"What's your main goal?\" : \"Describe this task...\",\n            autoFocus: true,\n            onKeyDown: e => {\n              if (e.key === 'Enter' && !e.shiftKey && e.target.value.trim()) {\n                onUpdate(goal.id, e.target.value);\n                e.preventDefault();\n              }\n            },\n            onBlur: e => {\n              if (e.target.value.trim()) {\n                onUpdate(goal.id, e.target.value);\n              } else if (goal.level > 0) {\n                onDelete(goal.id);\n              }\n            },\n            onMouseDown: e => e.stopPropagation() // Prevent drag when editing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `w-full text-sm cursor-text p-2 rounded-lg hover:bg-gray-50 transition-colors ${goal.completed ? 'line-through text-gray-500' : levelStyle.color} ${goal.level === 0 ? 'font-bold' : 'font-medium'}`,\n            onClick: () => onStartEditing(goal.id),\n            children: goal.text || (goal.level === 0 ? \"Click to define your main goal...\" : \"Click to add task...\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render list view component\n  const renderListView = () => {\n    const renderGoalItem = (goal, depth = 0) => {\n      const children = goals.filter(g => g.parentId === goal.id);\n      const levelStyle = getLevelStyle(goal.level, goal.completed);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex items-center gap-3 p-3 rounded-lg border-2 ${levelStyle.border} ${levelStyle.bg} transition-all hover:shadow-md`,\n          style: {\n            marginLeft: `${depth * 24}px`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleComplete(goal.id),\n            className: `p-1 rounded transition-colors ${goal.completed ? 'bg-green-500 text-white' : 'bg-white border-2 border-gray-300 hover:border-green-400'}`,\n            children: /*#__PURE__*/_jsxDEV(Check, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), goal.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            defaultValue: goal.text,\n            className: \"flex-1 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: goal.level === 0 ? \"What's your main goal?\" : \"Enter task...\",\n            autoFocus: true,\n            onKeyDown: e => {\n              if (e.key === 'Enter' && e.target.value.trim()) {\n                updateGoal(goal.id, e.target.value);\n              }\n            },\n            onBlur: e => {\n              if (e.target.value.trim()) {\n                updateGoal(goal.id, e.target.value);\n              } else if (goal.level > 0) {\n                deleteGoal(goal.id);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `flex-1 cursor-pointer p-2 rounded hover:bg-gray-50 ${goal.completed ? 'line-through text-gray-500' : levelStyle.color} ${goal.level === 0 ? 'font-bold text-lg' : 'font-medium'}`,\n            onClick: () => startEditing(goal.id),\n            children: goal.text || (goal.level === 0 ? \"Click to define your main goal...\" : \"Click to add task...\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addSubGoal(goal.id),\n              className: \"text-purple-600 hover:bg-purple-100 p-1 rounded\",\n              children: /*#__PURE__*/_jsxDEV(Plus, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 15\n            }, this), goal.level > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteGoal(goal.id),\n              className: \"text-red-600 hover:bg-red-100 p-1 rounded\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: children.map(child => renderGoalItem(child, depth + 1))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this)]\n      }, goal.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 max-w-4xl mx-auto\",\n      style: {\n        marginTop: '80px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: goals.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6 border-4 border-dashed border-yellow-300 rounded-xl text-center cursor-pointer hover:border-yellow-400 hover:bg-yellow-50 transition-colors\",\n          onClick: () => {\n            const newGoal = {\n              id: 1,\n              text: '',\n              completed: false,\n              level: 0,\n              gridRow: 0,\n              parentId: null,\n              position: gridToPosition(0, 0),\n              children: [],\n              isEditing: true\n            };\n            setGoals([newGoal]);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Target, {\n            className: \"mx-auto mb-3 text-yellow-600\",\n            size: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-yellow-800 mb-2\",\n            children: \"Start Breaking Down Your Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-yellow-700\",\n            children: \"Click here to define your main goal and start breaking it down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this) : goals.filter(goal => goal.level === 0).map(rootGoal => renderGoalItem(rootGoal))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this);\n  };\n  if (!isStarted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-0 left-0 right-0 z-50 bg-white/95 backdrop-blur-sm border-b border-gray-200 shadow-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center px-6 py-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(Target, {\n              className: \"text-yellow-600\",\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-xl font-bold text-gray-800\",\n              children: \"Goal Breaker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this), focusedGoal && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\",\n              children: \"Focus Mode Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center bg-white rounded-lg p-1 shadow-lg border border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentView('canvas'),\n              className: `px-4 py-2 rounded-md text-sm font-medium transition-all ${currentView === 'canvas' ? 'bg-blue-500 text-white shadow-sm' : 'text-gray-600 hover:text-blue-600'}`,\n              children: \"Canvas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentView('list'),\n              className: `px-4 py-2 rounded-md text-sm font-medium transition-all ${currentView === 'list' ? 'bg-blue-500 text-white shadow-sm' : 'text-gray-600 hover:text-blue-600'}`,\n              children: \"List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, this), existingLevels.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2 bg-white rounded-xl p-2 shadow-lg border border-gray-200\",\n            children: existingLevels.map(level => {\n              const stats = getLevelStats(level);\n              const isHidden = hiddenLevels.has(level);\n              const levelStyle = getLevelStyle(level, false);\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleLevelVisibility(level),\n                className: `flex items-center gap-2 px-3 py-1.5 rounded-lg transition-all duration-300 transform hover:scale-105 text-sm ${isHidden ? 'bg-gray-200 text-gray-600 hover:bg-gray-300' : `${levelStyle.bg} ${levelStyle.color} ${levelStyle.border} ${levelStyle.borderWidth}`}`,\n                children: [isHidden ? /*#__PURE__*/_jsxDEV(EyeOff, {\n                  size: 12\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 35\n                }, this) : /*#__PURE__*/_jsxDEV(Eye, {\n                  size: 12\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 58\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: getLevelLabel(level)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs bg-white px-2 py-0.5 rounded-full\",\n                  children: [stats.completed, \"/\", stats.total]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 23\n                }, this)]\n              }, level, true, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 bg-gray-100 px-3 py-1 rounded-full\",\n            children: [goals.filter(g => g.completed).length, \" / \", goals.length, \" completed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: reset,\n            className: \"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }, this), currentView === 'list' ? renderListView() : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full h-screen overflow-hidden\",\n      style: {\n        marginTop: '80px'\n      },\n      onMouseMove: handleCanvasMouseMove,\n      onMouseUp: handleCanvasMouseUp,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: canvasRef,\n        className: `canvas-background relative select-none ${spacePressed || isPanning ? 'cursor-grabbing' : 'cursor-default'}`,\n        style: {\n          width: canvasSize.width,\n          height: canvasSize.height,\n          transform: `translate(${canvasOffset.x}px, ${canvasOffset.y}px)`,\n          transformOrigin: '0 0',\n          backgroundColor: 'transparent'\n        },\n        onMouseDown: handleCanvasMouseDown,\n        onKeyDown: handleCanvasKeyDown,\n        onKeyUp: handleCanvasKeyUp,\n        tabIndex: 0,\n        children: [/*#__PURE__*/_jsxDEV(ConnectionLines, {\n          connections: connections,\n          canvasSize: canvasSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 13\n        }, this), goals.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute flex items-center justify-center w-96 h-32 bg-gradient-to-br from-yellow-100 to-orange-100 border-4 border-dashed border-yellow-400 rounded-2xl cursor-pointer hover:from-yellow-200 hover:to-orange-200 hover:border-yellow-500 transition-all shadow-lg\",\n          style: {\n            left: canvasSize.width - GRID.MARGIN - GRID.CARD_WIDTH - 48,\n            top: GRID.MARGIN + 50\n          },\n          onClick: () => {\n            const mainGoalPosition = gridToPosition(0, 0);\n            const newGoal = {\n              id: 1,\n              text: '',\n              completed: false,\n              level: 0,\n              gridRow: 0,\n              parentId: null,\n              position: mainGoalPosition,\n              children: [],\n              isEditing: true\n            };\n            setGoals([newGoal]);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Target, {\n              className: \"mx-auto mb-2 text-yellow-700\",\n              size: 32\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-bold text-yellow-800\",\n              children: \"What's your main goal?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-yellow-700 text-sm\",\n              children: \"Click to start breaking it down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 15\n        }, this) : getVisibleGoals().map(goal => /*#__PURE__*/_jsxDEV(GoalCard, {\n          goal: goal,\n          onUpdate: updateGoal,\n          onToggleComplete: toggleComplete,\n          onAddSubGoal: addSubGoal,\n          onDelete: deleteGoal,\n          onStartEditing: startEditing,\n          onToggleFocus: toggleFocus,\n          isFocused: focusedGoal === goal.id,\n          isDragged: (draggedGoal === null || draggedGoal === void 0 ? void 0 : draggedGoal.id) === goal.id,\n          onDragStart: handleGoalDragStart\n        }, goal.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 596,\n    columnNumber: 5\n  }, this);\n};\n_s(GoalBreaker, \"eMNu5OG11TiECYbrwQew0iZi+EU=\");\n_c = GoalBreaker;\nexport default GoalBreaker;\nvar _c;\n$RefreshReg$(_c, \"GoalBreaker\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Plus","Check","X","Target","Eye","EyeOff","Focus","ConnectionLines","GRID","jsxDEV","_jsxDEV","GoalBreaker","_s","goals","setGoals","mainGoal","setMainGoal","isStarted","setIsStarted","currentView","setCurrentView","draggedGoal","setDraggedGoal","dragOffset","setDragOffset","x","y","connections","setConnections","hiddenLevels","setHiddenLevels","Set","focusedGoal","setFocusedGoal","canvasOffset","setCanvasOffset","isPanning","setIsPanning","panStart","setPanStart","spacePressed","setSpacePressed","canvasRef","canvasSize","setCanvasSize","width","height","viewportWidth","window","innerWidth","viewportHeight","innerHeight","centerX","CARD_WIDTH","centerY","CARD_HEIGHT","MARGIN","getLevelStyle","level","completed","levelStyles","border","borderWidth","color","style","Math","min","length","bg","gridToPosition","row","COLUMN_WIDTH","ROW_HEIGHT","max","getNextRowForLevel","levelGoals","filter","g","occupiedRows","map","gridRow","sort","a","b","nextRow","addSubGoal","parentId","parent","find","id","newId","newLevel","newRow","newPosition","newGoal","text","position","isEditing","children","prev","updateGoal","goal","startEditing","toggleComplete","deleteGoal","reset","getLevelStats","total","getLevelLabel","labels","toggleLevelVisibility","newHidden","has","delete","add","toggleFocus","goalId","existingLevels","getVisibleGoals","visibleGoals","focusedGoalData","relatedGoals","current","addDescendants","forEach","child","handleCanvasMouseDown","e","target","closest","clientX","clientY","preventDefault","handleCanvasMouseMove","deltaX","deltaY","canvasRect","getBoundingClientRect","newX","left","newY","top","handleCanvasMouseUp","handleCanvasKeyDown","code","handleCanvasKeyUp","handleGoalDragStart","stopPropagation","goalRect","currentTarget","handleGlobalMouseMove","handleGlobalMouseUp","document","addEventListener","removeEventListener","newConnections","fromX","fromY","toX","toY","midX","midY","curveOffset","abs","push","from","to","path","GoalCard","onUpdate","onToggleComplete","onAddSubGoal","onDelete","onStartEditing","onToggleFocus","isFocused","isDragged","onDragStart","levelStyle","handleMouseDown","tagName","className","zIndex","userSelect","onMouseDown","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","placeholder","autoFocus","onKeyDown","key","shiftKey","value","trim","onBlur","renderListView","renderGoalItem","depth","marginLeft","type","marginTop","rootGoal","stats","isHidden","onMouseMove","onMouseUp","ref","transform","transformOrigin","backgroundColor","onKeyUp","tabIndex","mainGoalPosition","_c","$RefreshReg$"],"sources":["C:/apps/goal-breaker/src/components/GoalBreakdown/index.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Plus, Check, X, Target, Edit3, Move, Eye, EyeOff, Focus } from 'lucide-react';\nimport { ConnectionLines } from '../ConnectionLines';\nimport { gridToPosition, getNextRowForLevel, GRID } from '../../utils/gridHelpers';\nimport { getLevelStyle, getLevelStats, getLevelLabel } from '../../utils/styleHelpers';\n\nconst GoalBreaker = () => {\n  const [goals, setGoals] = useState([]);\n  const [mainGoal, setMainGoal] = useState('');\n  const [isStarted, setIsStarted] = useState(false);\n  const [currentView, setCurrentView] = useState('canvas'); // 'canvas' or 'list'\n  const [draggedGoal, setDraggedGoal] = useState(null);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [connections, setConnections] = useState([]);\n  const [hiddenLevels, setHiddenLevels] = useState(new Set());\n  const [focusedGoal, setFocusedGoal] = useState(null);\n  const [canvasOffset, setCanvasOffset] = useState({ x: 0, y: 0 });\n  const [isPanning, setIsPanning] = useState(false);\n  const [panStart, setPanStart] = useState({ x: 0, y: 0 });\n  const [spacePressed, setSpacePressed] = useState(false);\n  const canvasRef = useRef(null);\n  const [canvasSize, setCanvasSize] = useState({ width: 2000, height: 1200 });\n\n\n\n  // Initialize with empty state - user defines problem directly on canvas\n  useEffect(() => {\n    if (!isStarted) {\n      setIsStarted(true);\n      // Center the canvas so main goal area is immediately visible\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight - 80; // Account for header\n      const centerX = viewportWidth / 2 - GRID.CARD_WIDTH / 2;\n      const centerY = viewportHeight / 2 - GRID.CARD_HEIGHT / 2;\n      \n      setCanvasOffset({ \n        x: centerX - (canvasSize.width - GRID.MARGIN - GRID.CARD_WIDTH),\n        y: centerY - (GRID.MARGIN + GRID.CARD_HEIGHT / 2)\n      });\n    }\n  }, []);\n\n  // Level styling system - borders only, intensity increases with level\n  const getLevelStyle = (level, completed) => {\n    const levelStyles = [\n      { border: 'border-yellow-400', borderWidth: 'border-4', color: 'text-yellow-600' }, // Ultimate goal\n      { border: 'border-blue-300', borderWidth: 'border-2', color: 'text-blue-500' },\n      { border: 'border-purple-400', borderWidth: 'border-[3px]', color: 'text-purple-600' },\n      { border: 'border-green-400', borderWidth: 'border-[3px]', color: 'text-green-600' },\n      { border: 'border-orange-400', borderWidth: 'border-[4px]', color: 'text-orange-600' },\n      { border: 'border-pink-400', borderWidth: 'border-[4px]', color: 'text-pink-600' },\n      { border: 'border-red-400', borderWidth: 'border-[4px]', color: 'text-red-600' },\n      { border: 'border-indigo-500', borderWidth: 'border-[5px]', color: 'text-indigo-700' }\n    ];\n    \n    const style = levelStyles[Math.min(level, levelStyles.length - 1)];\n    \n    if (completed) {\n      return {\n        border: 'border-green-500',\n        borderWidth: style.borderWidth,\n        bg: 'bg-green-100',\n        color: 'text-green-800'\n      };\n    }\n    \n    return {\n      border: style.border,\n      borderWidth: style.borderWidth,\n      bg: 'bg-white',\n      color: style.color\n    };\n  };\n\n  // Convert grid coordinates to pixel position\n  const gridToPosition = (level, row) => {\n    const x = canvasSize.width - GRID.MARGIN - (level * GRID.COLUMN_WIDTH) - GRID.CARD_WIDTH;\n    const y = GRID.MARGIN + (row * GRID.ROW_HEIGHT);\n    return {\n      x: Math.max(GRID.MARGIN, x),\n      y: Math.max(GRID.MARGIN, y)\n    };\n  };\n\n  // Get next available row for a level\n  const getNextRowForLevel = (level) => {\n    const levelGoals = goals.filter(g => g.level === level);\n    if (levelGoals.length === 0) return 0;\n    \n    const occupiedRows = levelGoals.map(g => g.gridRow).sort((a, b) => a - b);\n    let nextRow = 0;\n    for (const row of occupiedRows) {\n      if (row === nextRow) {\n        nextRow++;\n      } else {\n        break;\n      }\n    }\n    return nextRow;\n  };\n\n  // Add sub-goal with grid positioning\n  const addSubGoal = (parentId) => {\n    const parent = goals.find(g => g.id === parentId);\n    if (!parent) return;\n\n    const newId = Math.max(0, ...goals.map(g => g.id)) + 1;\n    const newLevel = parent.level + 1;\n    const newRow = getNextRowForLevel(newLevel);\n    const newPosition = gridToPosition(newLevel, newRow);\n\n    const newGoal = {\n      id: newId,\n      text: '',\n      completed: false,\n      level: newLevel,\n      gridRow: newRow,\n      parentId: parentId,\n      position: newPosition,\n      isEditing: true,\n      children: []\n    };\n\n    setGoals(prev => [...prev, newGoal]);\n  };\n\n  const updateGoal = (id, text) => {\n    setGoals(goals.map(goal => \n      goal.id === id \n        ? { ...goal, text, isEditing: false }\n        : goal\n    ));\n  };\n\n  const startEditing = (id) => {\n    setGoals(goals.map(goal => \n      goal.id === id \n        ? { ...goal, isEditing: true }\n        : goal\n    ));\n  };\n\n  const toggleComplete = (id) => {\n    setGoals(goals.map(goal => \n      goal.id === id \n        ? { ...goal, completed: !goal.completed }\n        : goal\n    ));\n  };\n\n  const deleteGoal = (id) => {\n    setGoals(goals.filter(goal => goal.id !== id && goal.parentId !== id));\n  };\n\n  const reset = () => {\n    setGoals([]);\n    setMainGoal('');\n    setCanvasOffset({ x: 0, y: 0 });\n  };\n\n  const getLevelStats = (level) => {\n    const levelGoals = goals.filter(g => g.level === level);\n    const completed = levelGoals.filter(g => g.completed).length;\n    return { total: levelGoals.length, completed };\n  };\n\n  const getLevelLabel = (level) => {\n    if (level === 0) return '🎯 Ultimate Goal';\n    const labels = ['📋 Strategy', '🎯 Tactics', '⚡ Actions', '📝 Tasks', '✅ Steps', '🔍 Details', '💡 Micro'];\n    return labels[level - 1] || `📌 Level ${level}`;\n  };\n\n  const toggleLevelVisibility = (level) => {\n    const newHidden = new Set(hiddenLevels);\n    if (newHidden.has(level)) {\n      newHidden.delete(level);\n    } else {\n      newHidden.add(level);\n    }\n    setHiddenLevels(newHidden);\n  };\n\n  const toggleFocus = (goalId) => {\n    setFocusedGoal(focusedGoal === goalId ? null : goalId);\n  };\n\n  const existingLevels = [...new Set(goals.map(g => g.level))].sort((a, b) => a - b);\n\n  // Get visible goals based on focus and hidden levels\n  const getVisibleGoals = () => {\n    let visibleGoals = goals.filter(goal => !hiddenLevels.has(goal.level));\n    \n    if (focusedGoal) {\n      const focusedGoalData = goals.find(g => g.id === focusedGoal);\n      if (focusedGoalData) {\n        const relatedGoals = new Set();\n        \n        // Add focused goal and its ancestors\n        let current = focusedGoalData;\n        while (current) {\n          relatedGoals.add(current.id);\n          current = goals.find(g => g.id === current.parentId);\n        }\n        \n        // Add all descendants\n        const addDescendants = (goalId) => {\n          const children = goals.filter(g => g.parentId === goalId);\n          children.forEach(child => {\n            relatedGoals.add(child.id);\n            addDescendants(child.id);\n          });\n        };\n        addDescendants(focusedGoal);\n        \n        visibleGoals = visibleGoals.filter(goal => relatedGoals.has(goal.id));\n      }\n    }\n    \n    return visibleGoals;\n  };\n\n  // Canvas event handlers\n  const handleCanvasMouseDown = (e) => {\n    // Only start panning if clicking on canvas background, not on a goal\n    if (e.target === canvasRef.current || e.target.closest('.canvas-background')) {\n      setIsPanning(true);\n      setPanStart({ x: e.clientX, y: e.clientY });\n      e.preventDefault();\n    }\n  };\n\n  const handleCanvasMouseMove = (e) => {\n    if (isPanning) {\n      const deltaX = e.clientX - panStart.x;\n      const deltaY = e.clientY - panStart.y;\n      setCanvasOffset(prev => ({\n        x: prev.x + deltaX,\n        y: prev.y + deltaY\n      }));\n      setPanStart({ x: e.clientX, y: e.clientY });\n    } else if (draggedGoal) {\n      // Update dragged goal position\n      const canvasRect = canvasRef.current.getBoundingClientRect();\n      const newX = e.clientX - canvasRect.left - canvasOffset.x - dragOffset.x;\n      const newY = e.clientY - canvasRect.top - canvasOffset.y - dragOffset.y;\n      \n      setGoals(prev => prev.map(goal => \n        goal.id === draggedGoal.id \n          ? { ...goal, position: { x: newX, y: newY } }\n          : goal\n      ));\n    }\n  };\n\n  const handleCanvasMouseUp = () => {\n    setIsPanning(false);\n    setDraggedGoal(null);\n  };\n\n  const handleCanvasKeyDown = (e) => {\n    if (e.code === 'Space') {\n      setSpacePressed(true);\n      e.preventDefault();\n    }\n  };\n\n  const handleCanvasKeyUp = (e) => {\n    if (e.code === 'Space') {\n      setSpacePressed(false);\n      e.preventDefault();\n    }\n  };\n\n  const handleGoalDragStart = (goal, e) => {\n    // Prevent canvas panning when starting to drag a goal\n    e.stopPropagation();\n    \n    const canvasRect = canvasRef.current.getBoundingClientRect();\n    const goalRect = e.currentTarget.getBoundingClientRect();\n    \n    setDraggedGoal(goal);\n    setDragOffset({\n      x: e.clientX - goalRect.left,\n      y: e.clientY - goalRect.top\n    });\n    \n    // Prevent text selection during drag\n    e.preventDefault();\n  };\n\n  // Global mouse event handlers for drag and drop\n  useEffect(() => {\n    const handleGlobalMouseMove = (e) => {\n      if (draggedGoal && canvasRef.current) {\n        const canvasRect = canvasRef.current.getBoundingClientRect();\n        const newX = e.clientX - canvasRect.left - canvasOffset.x - dragOffset.x;\n        const newY = e.clientY - canvasRect.top - canvasOffset.y - dragOffset.y;\n        \n        setGoals(prev => prev.map(goal => \n          goal.id === draggedGoal.id \n            ? { ...goal, position: { x: newX, y: newY } }\n            : goal\n        ));\n      }\n    };\n\n    const handleGlobalMouseUp = () => {\n      setDraggedGoal(null);\n      setIsPanning(false);\n    };\n\n    if (draggedGoal || isPanning) {\n      document.addEventListener('mousemove', handleGlobalMouseMove);\n      document.addEventListener('mouseup', handleGlobalMouseUp);\n      \n      return () => {\n        document.removeEventListener('mousemove', handleGlobalMouseMove);\n        document.removeEventListener('mouseup', handleGlobalMouseUp);\n      };\n    }\n  }, [draggedGoal, isPanning, canvasOffset, dragOffset]);\n  useEffect(() => {\n    const newConnections = [];\n    goals.forEach(goal => {\n      if (goal.parentId !== null) {\n        const parent = goals.find(g => g.id === goal.parentId);\n        if (parent) {\n          const fromX = parent.position.x + GRID.CARD_WIDTH / 2;\n          const fromY = parent.position.y + GRID.CARD_HEIGHT;\n          const toX = goal.position.x + GRID.CARD_WIDTH / 2;\n          const toY = goal.position.y;\n          \n          // Create curved connection line\n          const midX = fromX + (toX - fromX) / 2;\n          const midY = fromY + (toY - fromY) / 2;\n          const curveOffset = Math.abs(toX - fromX) * 0.3;\n          \n          newConnections.push({\n            id: `${parent.id}-${goal.id}`,\n            from: { x: fromX, y: fromY },\n            to: { x: toX, y: toY },\n            completed: parent.completed && goal.completed,\n            path: `M ${fromX} ${fromY} Q ${midX} ${midY - curveOffset} ${toX} ${toY}`\n          });\n        }\n      }\n    });\n    setConnections(newConnections);\n  }, [goals, GRID.CARD_WIDTH, GRID.CARD_HEIGHT]);\n\n  // GoalCard component\n  const GoalCard = ({ goal, onUpdate, onToggleComplete, onAddSubGoal, onDelete, onStartEditing, onToggleFocus, isFocused, isDragged, onDragStart }) => {\n    const levelStyle = getLevelStyle(goal.level, goal.completed);\n    \n    const handleMouseDown = (e) => {\n      // Only start dragging if not clicking on interactive elements\n      const target = e.target;\n      if (target.tagName === 'BUTTON' || target.tagName === 'INPUT' || target.tagName === 'TEXTAREA') {\n        return;\n      }\n      \n      // Don't start drag if goal is in editing mode\n      if (goal.isEditing) {\n        return;\n      }\n      \n      onDragStart(goal, e);\n    };\n    \n    return (\n      <div\n        className={`absolute bg-white rounded-xl shadow-lg transition-all duration-300 hover:shadow-xl cursor-move ${levelStyle.border} ${levelStyle.borderWidth} ${levelStyle.bg} ${\n          isDragged ? 'scale-105 rotate-2 z-50' : ''\n        } ${isFocused ? 'ring-4 ring-blue-300' : ''}`}\n        style={{\n          left: goal.position.x,\n          top: goal.position.y,\n          width: GRID.CARD_WIDTH,\n          height: GRID.CARD_HEIGHT,\n          zIndex: isDragged ? 50 : isFocused ? 30 : 10,\n          userSelect: 'none'\n        }}\n        onMouseDown={handleMouseDown}\n      >\n        <div className=\"p-4 h-full flex flex-col\">\n          {/* Card Header */}\n          <div className=\"flex justify-between items-start mb-3\">\n            <div className=\"flex items-center gap-2\">\n              <button\n                onClick={() => onToggleComplete(goal.id)}\n                className={`p-1.5 rounded-full transition-all ${\n                  goal.completed \n                    ? 'bg-green-500 text-white scale-110' \n                    : 'bg-gray-100 border-2 border-gray-300 hover:border-green-400 hover:bg-green-50'\n                }`}\n              >\n                <Check size={12} />\n              </button>\n              \n              <div className={`text-xs font-medium px-2 py-1 rounded-full ${levelStyle.color} bg-opacity-20`}>\n                L{goal.level}\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-1\">\n              <button\n                onClick={() => onToggleFocus(goal.id)}\n                className={`p-1.5 rounded-full transition-all ${\n                  isFocused \n                    ? 'bg-blue-500 text-white' \n                    : 'text-gray-400 hover:bg-gray-100 hover:text-blue-500'\n                }`}\n              >\n                <Focus size={12} />\n              </button>\n              \n              <button\n                onClick={() => onAddSubGoal(goal.id)}\n                className=\"p-1.5 rounded-full text-purple-500 hover:bg-purple-100 transition-all\"\n              >\n                <Plus size={12} />\n              </button>\n              \n              {goal.level > 0 && (\n                <button\n                  onClick={() => onDelete(goal.id)}\n                  className=\"p-1.5 rounded-full text-red-500 hover:bg-red-100 transition-all\"\n                >\n                  <X size={12} />\n                </button>\n              )}\n            </div>\n          </div>\n\n          {/* Card Content */}\n          <div className=\"flex-1 flex items-center\">\n            {goal.isEditing ? (\n              <textarea\n                defaultValue={goal.text}\n                className=\"w-full h-16 p-2 border border-gray-200 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm\"\n                placeholder={goal.level === 0 ? \"What's your main goal?\" : \"Describe this task...\"}\n                autoFocus\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter' && !e.shiftKey && e.target.value.trim()) {\n                    onUpdate(goal.id, e.target.value);\n                    e.preventDefault();\n                  }\n                }}\n                onBlur={(e) => {\n                  if (e.target.value.trim()) {\n                    onUpdate(goal.id, e.target.value);\n                  } else if (goal.level > 0) {\n                    onDelete(goal.id);\n                  }\n                }}\n                onMouseDown={(e) => e.stopPropagation()} // Prevent drag when editing\n              />\n            ) : (\n              <p \n                className={`w-full text-sm cursor-text p-2 rounded-lg hover:bg-gray-50 transition-colors ${\n                  goal.completed ? 'line-through text-gray-500' : levelStyle.color\n                } ${goal.level === 0 ? 'font-bold' : 'font-medium'}`}\n                onClick={() => onStartEditing(goal.id)}\n              >\n                {goal.text || (goal.level === 0 ? \"Click to define your main goal...\" : \"Click to add task...\")}\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Render list view component\n  const renderListView = () => {\n    const renderGoalItem = (goal, depth = 0) => {\n      const children = goals.filter(g => g.parentId === goal.id);\n      const levelStyle = getLevelStyle(goal.level, goal.completed);\n      \n      return (\n        <div key={goal.id} className=\"space-y-2\">\n          <div \n            className={`flex items-center gap-3 p-3 rounded-lg border-2 ${levelStyle.border} ${levelStyle.bg} transition-all hover:shadow-md`}\n            style={{ marginLeft: `${depth * 24}px` }}\n          >\n            <button\n              onClick={() => toggleComplete(goal.id)}\n              className={`p-1 rounded transition-colors ${\n                goal.completed \n                  ? 'bg-green-500 text-white' \n                  : 'bg-white border-2 border-gray-300 hover:border-green-400'\n              }`}\n            >\n              <Check size={14} />\n            </button>\n            \n            {goal.isEditing ? (\n              <input\n                type=\"text\"\n                defaultValue={goal.text}\n                className=\"flex-1 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder={goal.level === 0 ? \"What's your main goal?\" : \"Enter task...\"}\n                autoFocus\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter' && e.target.value.trim()) {\n                    updateGoal(goal.id, e.target.value);\n                  }\n                }}\n                onBlur={(e) => {\n                  if (e.target.value.trim()) {\n                    updateGoal(goal.id, e.target.value);\n                  } else if (goal.level > 0) {\n                    deleteGoal(goal.id);\n                  }\n                }}\n              />\n            ) : (\n              <p \n                className={`flex-1 cursor-pointer p-2 rounded hover:bg-gray-50 ${\n                  goal.completed ? 'line-through text-gray-500' : levelStyle.color\n                } ${goal.level === 0 ? 'font-bold text-lg' : 'font-medium'}`}\n                onClick={() => startEditing(goal.id)}\n              >\n                {goal.text || (goal.level === 0 ? \"Click to define your main goal...\" : \"Click to add task...\")}\n              </p>\n            )}\n            \n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => addSubGoal(goal.id)}\n                className=\"text-purple-600 hover:bg-purple-100 p-1 rounded\"\n              >\n                <Plus size={16} />\n              </button>\n              \n              {goal.level > 0 && (\n                <button\n                  onClick={() => deleteGoal(goal.id)}\n                  className=\"text-red-600 hover:bg-red-100 p-1 rounded\"\n                >\n                  <X size={16} />\n                </button>\n              )}\n            </div>\n          </div>\n          \n          {children.length > 0 && (\n            <div className=\"space-y-2\">\n              {children.map(child => renderGoalItem(child, depth + 1))}\n            </div>\n          )}\n        </div>\n      );\n    };\n\n    return (\n      <div className=\"p-6 max-w-4xl mx-auto\" style={{ marginTop: '80px' }}>\n        <div className=\"space-y-4\">\n          {goals.length === 0 ? (\n            <div \n              className=\"p-6 border-4 border-dashed border-yellow-300 rounded-xl text-center cursor-pointer hover:border-yellow-400 hover:bg-yellow-50 transition-colors\"\n              onClick={() => {\n                const newGoal = {\n                  id: 1,\n                  text: '',\n                  completed: false,\n                  level: 0,\n                  gridRow: 0,\n                  parentId: null,\n                  position: gridToPosition(0, 0),\n                  children: [],\n                  isEditing: true\n                };\n                setGoals([newGoal]);\n              }}\n            >\n              <Target className=\"mx-auto mb-3 text-yellow-600\" size={48} />\n              <h2 className=\"text-xl font-bold text-yellow-800 mb-2\">Start Breaking Down Your Goal</h2>\n              <p className=\"text-yellow-700\">Click here to define your main goal and start breaking it down</p>\n            </div>\n          ) : (\n            goals\n              .filter(goal => goal.level === 0)\n              .map(rootGoal => renderGoalItem(rootGoal))\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  if (!isStarted) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 overflow-hidden\">\n      {/* Header */}\n      <div className=\"fixed top-0 left-0 right-0 z-50 bg-white/95 backdrop-blur-sm border-b border-gray-200 shadow-sm\">\n        <div className=\"flex justify-between items-center px-6 py-4\">\n          <div className=\"flex items-center gap-6\">\n            <div className=\"flex items-center gap-3\">\n              <Target className=\"text-yellow-600\" size={24} />\n              <h1 className=\"text-xl font-bold text-gray-800\">Goal Breaker</h1>\n              {focusedGoal && (\n                <div className=\"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\">\n                  Focus Mode Active\n                </div>\n              )}\n            </div>\n\n            {/* View Toggle */}\n            <div className=\"flex items-center bg-white rounded-lg p-1 shadow-lg border border-gray-200\">\n              <button\n                onClick={() => setCurrentView('canvas')}\n                className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${\n                  currentView === 'canvas' \n                    ? 'bg-blue-500 text-white shadow-sm' \n                    : 'text-gray-600 hover:text-blue-600'\n                }`}\n              >\n                Canvas\n              </button>\n              <button\n                onClick={() => setCurrentView('list')}\n                className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${\n                  currentView === 'list' \n                    ? 'bg-blue-500 text-white shadow-sm' \n                    : 'text-gray-600 hover:text-blue-600'\n                }`}\n              >\n                List\n              </button>\n            </div>\n\n            {/* Level Navigation */}\n            {existingLevels.length > 1 && (\n              <div className=\"flex items-center gap-2 bg-white rounded-xl p-2 shadow-lg border border-gray-200\">\n                {existingLevels.map(level => {\n                  const stats = getLevelStats(level);\n                  const isHidden = hiddenLevels.has(level);\n                  const levelStyle = getLevelStyle(level, false);\n                  \n                  return (\n                    <button\n                      key={level}\n                      onClick={() => toggleLevelVisibility(level)}\n                      className={`flex items-center gap-2 px-3 py-1.5 rounded-lg transition-all duration-300 transform hover:scale-105 text-sm ${\n                        isHidden \n                          ? 'bg-gray-200 text-gray-600 hover:bg-gray-300' \n                          : `${levelStyle.bg} ${levelStyle.color} ${levelStyle.border} ${levelStyle.borderWidth}`\n                      }`}\n                    >\n                      {isHidden ? <EyeOff size={12} /> : <Eye size={12} />}\n                      <span className=\"font-medium\">{getLevelLabel(level)}</span>\n                      <span className=\"text-xs bg-white px-2 py-0.5 rounded-full\">\n                        {stats.completed}/{stats.total}\n                      </span>\n                    </button>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex items-center gap-4\">\n            <div className=\"text-sm text-gray-600 bg-gray-100 px-3 py-1 rounded-full\">\n              {goals.filter(g => g.completed).length} / {goals.length} completed\n            </div>\n            <button\n              onClick={reset}\n              className=\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors\"\n            >\n              Reset\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content - Canvas or List View */}\n      {currentView === 'list' ? (\n        renderListView()\n      ) : (\n        <div \n          className=\"relative w-full h-screen overflow-hidden\"\n          style={{ marginTop: '80px' }}\n          onMouseMove={handleCanvasMouseMove}\n          onMouseUp={handleCanvasMouseUp}\n        >\n          {/* Canvas Content */}\n          <div\n            ref={canvasRef}\n            className={`canvas-background relative select-none ${spacePressed || isPanning ? 'cursor-grabbing' : 'cursor-default'}`}\n            style={{\n              width: canvasSize.width,\n              height: canvasSize.height,\n              transform: `translate(${canvasOffset.x}px, ${canvasOffset.y}px)`,\n              transformOrigin: '0 0',\n              backgroundColor: 'transparent'\n            }}\n            onMouseDown={handleCanvasMouseDown}\n            onKeyDown={handleCanvasKeyDown}\n            onKeyUp={handleCanvasKeyUp}\n            tabIndex={0}\n          >\n            {/* Connection Lines */}\n            <ConnectionLines connections={connections} canvasSize={canvasSize} />\n            \n            {/* Goals */}\n            {goals.length === 0 ? (\n              <div \n                className=\"absolute flex items-center justify-center w-96 h-32 bg-gradient-to-br from-yellow-100 to-orange-100 border-4 border-dashed border-yellow-400 rounded-2xl cursor-pointer hover:from-yellow-200 hover:to-orange-200 hover:border-yellow-500 transition-all shadow-lg\"\n                style={{\n                  left: canvasSize.width - GRID.MARGIN - GRID.CARD_WIDTH - 48,\n                  top: GRID.MARGIN + 50\n                }}\n                onClick={() => {\n                  const mainGoalPosition = gridToPosition(0, 0);\n                  const newGoal = {\n                    id: 1,\n                    text: '',\n                    completed: false,\n                    level: 0,\n                    gridRow: 0,\n                    parentId: null,\n                    position: mainGoalPosition,\n                    children: [],\n                    isEditing: true\n                  };\n                  setGoals([newGoal]);\n                }}\n              >\n                <div className=\"text-center\">\n                  <Target className=\"mx-auto mb-2 text-yellow-700\" size={32} />\n                  <h2 className=\"text-lg font-bold text-yellow-800\">What's your main goal?</h2>\n                  <p className=\"text-yellow-700 text-sm\">Click to start breaking it down</p>\n                </div>\n              </div>\n            ) : (\n              getVisibleGoals().map(goal => (\n                <GoalCard\n                  key={goal.id}\n                  goal={goal}\n                  onUpdate={updateGoal}\n                  onToggleComplete={toggleComplete}\n                  onAddSubGoal={addSubGoal}\n                  onDelete={deleteGoal}\n                  onStartEditing={startEditing}\n                  onToggleFocus={toggleFocus}\n                  isFocused={focusedGoal === goal.id}\n                  isDragged={draggedGoal?.id === goal.id}\n                  onDragStart={handleGoalDragStart}\n                />\n              ))\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GoalBreaker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}