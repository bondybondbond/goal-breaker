{"ast":null,"code":"// Level styling system - borders only, intensity increases with level\nexport const getLevelStyle = (level, completed) => {\n  const levelStyles = [{\n    border: \"border-yellow-400\",\n    borderWidth: \"border-4\",\n    color: \"text-yellow-600\"\n  },\n  // Ultimate goal\n  {\n    border: \"border-blue-300\",\n    borderWidth: \"border-2\",\n    color: \"text-blue-500\"\n  }, {\n    border: \"border-purple-400\",\n    borderWidth: \"border-[3px]\",\n    color: \"text-purple-600\"\n  }, {\n    border: \"border-green-400\",\n    borderWidth: \"border-[3px]\",\n    color: \"text-green-600\"\n  }, {\n    border: \"border-orange-400\",\n    borderWidth: \"border-[4px]\",\n    color: \"text-orange-600\"\n  }, {\n    border: \"border-pink-400\",\n    borderWidth: \"border-[4px]\",\n    color: \"text-pink-600\"\n  }, {\n    border: \"border-red-400\",\n    borderWidth: \"border-[4px]\",\n    color: \"text-red-600\"\n  }, {\n    border: \"border-indigo-500\",\n    borderWidth: \"border-[5px]\",\n    color: \"text-indigo-700\"\n  }];\n  const style = levelStyles[Math.min(level, levelStyles.length - 1)];\n  if (completed) {\n    return {\n      border: \"border-green-500\",\n      borderWidth: style.borderWidth,\n      bg: \"bg-green-100\",\n      color: \"text-green-800\"\n    };\n  }\n  return {\n    border: style.border,\n    borderWidth: style.borderWidth,\n    bg: \"bg-white\",\n    color: style.color\n  };\n};\nexport const getGoalStyle = (goal, isPanning, isDragged) => {\n  const levelStyle = getLevelStyle(goal.level, goal.completed);\n  const baseStyle = \"absolute rounded-xl shadow-lg transition-all duration-300 hover:shadow-xl hover:scale-[1.02] select-none\";\n  const cursorStyle = isPanning ? \"cursor-grab\" : goal.isEditing ? \"cursor-text\" : \"cursor-move\";\n  return `${baseStyle} ${levelStyle.bg} ${levelStyle.border} ${levelStyle.borderWidth} ${cursorStyle}`;\n};\nexport const getLevelStats = (level, goals) => {\n  const levelGoals = goals.filter(g => g.level === level);\n  const completed = levelGoals.filter(g => g.completed).length;\n  return {\n    total: levelGoals.length,\n    completed\n  };\n};\nexport const getLevelLabel = level => {\n  if (level === 0) return \"üéØ Ultimate Goal\";\n  const labels = [\"üó∫Ô∏è Strategy\", \"‚ö° Tactics\", \"üé¨ Actions\", \"üìã Tasks\", \"üë£ Steps\", \"üîç Details\", \"‚öôÔ∏è Micro\"];\n  return labels[level - 1] || `üìç Level ${level}`;\n};","map":{"version":3,"names":["getLevelStyle","level","completed","levelStyles","border","borderWidth","color","style","Math","min","length","bg","getGoalStyle","goal","isPanning","isDragged","levelStyle","baseStyle","cursorStyle","isEditing","getLevelStats","goals","levelGoals","filter","g","total","getLevelLabel","labels"],"sources":["C:/apps/goal-breaker/src/utils/styleHelpers.ts"],"sourcesContent":["import { LevelStyle, Goal, LevelStats } from \"../types/goal.types\";\r\n\r\n// Level styling system - borders only, intensity increases with level\r\nexport const getLevelStyle = (level: number, completed: boolean): LevelStyle => {\r\n  const levelStyles = [\r\n    { border: \"border-yellow-400\", borderWidth: \"border-4\", color: \"text-yellow-600\" }, // Ultimate goal\r\n    { border: \"border-blue-300\", borderWidth: \"border-2\", color: \"text-blue-500\" },\r\n    { border: \"border-purple-400\", borderWidth: \"border-[3px]\", color: \"text-purple-600\" },\r\n    { border: \"border-green-400\", borderWidth: \"border-[3px]\", color: \"text-green-600\" },\r\n    { border: \"border-orange-400\", borderWidth: \"border-[4px]\", color: \"text-orange-600\" },\r\n    { border: \"border-pink-400\", borderWidth: \"border-[4px]\", color: \"text-pink-600\" },\r\n    { border: \"border-red-400\", borderWidth: \"border-[4px]\", color: \"text-red-600\" },\r\n    { border: \"border-indigo-500\", borderWidth: \"border-[5px]\", color: \"text-indigo-700\" }\r\n  ];\r\n\r\n  const style = levelStyles[Math.min(level, levelStyles.length - 1)];\r\n\r\n  if (completed) {\r\n    return {\r\n      border: \"border-green-500\",\r\n      borderWidth: style.borderWidth,\r\n      bg: \"bg-green-100\",\r\n      color: \"text-green-800\"\r\n    };\r\n  }\r\n\r\n  return {\r\n    border: style.border,\r\n    borderWidth: style.borderWidth,\r\n    bg: \"bg-white\",\r\n    color: style.color\r\n  };\r\n};\r\n\r\nexport const getGoalStyle = (goal: Goal, isPanning: boolean, isDragged: boolean): string => {\r\n  const levelStyle = getLevelStyle(goal.level, goal.completed);\r\n  const baseStyle = \"absolute rounded-xl shadow-lg transition-all duration-300 hover:shadow-xl hover:scale-[1.02] select-none\";\r\n  const cursorStyle = isPanning ? \"cursor-grab\" : (goal.isEditing ? \"cursor-text\" : \"cursor-move\");\r\n  \r\n  return `${baseStyle} ${levelStyle.bg} ${levelStyle.border} ${levelStyle.borderWidth} ${cursorStyle}`;\r\n};\r\n\r\nexport const getLevelStats = (level: number, goals: Goal[]): LevelStats => {\r\n  const levelGoals = goals.filter(g => g.level === level);\r\n  const completed = levelGoals.filter(g => g.completed).length;\r\n  \r\n  return {\r\n    total: levelGoals.length,\r\n    completed\r\n  };\r\n};\r\n\r\nexport const getLevelLabel = (level: number): string => {\r\n  if (level === 0) return \"üéØ Ultimate Goal\";\r\n  \r\n  const labels = [\r\n    \"üó∫Ô∏è Strategy\", \r\n    \"‚ö° Tactics\", \r\n    \"üé¨ Actions\", \r\n    \"üìã Tasks\", \r\n    \"üë£ Steps\", \r\n    \"üîç Details\", \r\n    \"‚öôÔ∏è Micro\"\r\n  ];\r\n  \r\n  return labels[level - 1] || `üìç Level ${level}`;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}