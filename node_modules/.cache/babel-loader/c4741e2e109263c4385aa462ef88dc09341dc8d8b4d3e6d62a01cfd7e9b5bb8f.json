{"ast":null,"code":"var _jsxFileName = \"C:\\\\apps\\\\goal-breaker\\\\src\\\\components\\\\GoalBreakdown\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Plus, Check, X, Target, Eye, EyeOff, Focus } from 'lucide-react';\nimport { ConnectionLines } from '../ConnectionLines';\nimport { gridToPosition, getNextRowForLevel, GRID } from '../../utils/gridHelpers';\nimport { getLevelStyle, getLevelStats, getLevelLabel } from '../../utils/styleHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoalBreaker = () => {\n  _s();\n  const [goals, setGoals] = useState([]);\n  const [mainGoal, setMainGoal] = useState('');\n  const [isStarted, setIsStarted] = useState(false);\n  const [currentView, setCurrentView] = useState('canvas'); // 'canvas' or 'list'\n  const [draggedGoal, setDraggedGoal] = useState(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [connections, setConnections] = useState([]);\n  const [hiddenLevels, setHiddenLevels] = useState(new Set());\n  const [focusedGoal, setFocusedGoal] = useState(null);\n  const [canvasOffset, setCanvasOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isPanning, setIsPanning] = useState(false);\n  const [panStart, setPanStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [spacePressed, setSpacePressed] = useState(false);\n  const canvasRef = useRef(null);\n  const [canvasSize, setCanvasSize] = useState({\n    width: 2000,\n    height: 1200\n  });\n\n  // Initialize with empty state - user defines problem directly on canvas\n  useEffect(() => {\n    if (!isStarted) {\n      setIsStarted(true);\n      // Center the canvas so main goal area is immediately visible\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight - 80; // Account for header\n      const centerX = viewportWidth / 2 - GRID.CARD_WIDTH / 2;\n      const centerY = viewportHeight / 2 - GRID.CARD_HEIGHT / 2;\n      setCanvasOffset({\n        x: -centerX + viewportWidth / 2,\n        y: -centerY + viewportHeight / 2\n      });\n    }\n  }, [isStarted]);\n  useEffect(() => {\n    const newConnections = [];\n    goals.forEach(goal => {\n      if (goal.parentId !== null) {\n        const parent = goals.find(g => g.id === goal.parentId);\n        if (parent) {\n          const fromX = parent.position.x + GRID.CARD_WIDTH / 2;\n          const fromY = Math.max(0, parent.position.y + GRID.CARD_HEIGHT);\n          const toX = goal.position.x + GRID.CARD_WIDTH / 2;\n          const toY = Math.max(0, goal.position.y);\n\n          // Create curved connection line with bounds checking\n          const midX = fromX + (toX - fromX) / 2;\n          const midY = fromY + (toY - fromY) / 2;\n          const curveOffset = Math.abs(toX - fromX) * 0.3;\n\n          // Ensure the curve control point stays reasonable\n          const controlY = Math.max(0, midY - curveOffset);\n          newConnections.push({\n            id: `${parent.id}-${goal.id}`,\n            from: {\n              x: fromX,\n              y: fromY\n            },\n            to: {\n              x: toX,\n              y: toY\n            },\n            completed: parent.completed && goal.completed,\n            path: `M ${fromX} ${fromY} Q ${midX} ${controlY} ${toX} ${toY}`\n          });\n        }\n      }\n    });\n    setConnections(newConnections);\n  }, [goals, GRID.CARD_WIDTH, GRID.CARD_HEIGHT]);\n\n  // Calculate existing levels from goals array\n  const existingLevels = [...new Set(goals.map(goal => goal.level))].sort();\n\n  // Goal management functions\n  const updateGoal = (id, newText) => {\n    setGoals(goals.map(goal => goal.id === id ? {\n      ...goal,\n      text: newText,\n      isEditing: false\n    } : goal));\n  };\n  const startEditing = id => {\n    setGoals(goals.map(goal => goal.id === id ? {\n      ...goal,\n      isEditing: true\n    } : goal));\n  };\n  const toggleComplete = id => {\n    setGoals(goals.map(goal => goal.id === id ? {\n      ...goal,\n      completed: !goal.completed\n    } : goal));\n  };\n  const deleteGoal = id => {\n    setGoals(goals.filter(goal => goal.id !== id && goal.parentId !== id));\n  };\n  const reset = () => {\n    setGoals([]);\n    setMainGoal('');\n    setCanvasOffset({\n      x: 0,\n      y: 0\n    });\n  };\n  const addSubGoal = parentId => {\n    const parent = goals.find(g => g.id === parentId);\n    if (!parent) return;\n    const newId = Math.max(0, ...goals.map(g => g.id), 0) + 1;\n    const newLevel = parent.level + 1;\n    const newRow = getNextRowForLevel(newLevel, goals);\n    const newPosition = gridToPosition(newLevel, newRow, canvasSize.width);\n    const newGoal = {\n      id: newId,\n      text: '',\n      completed: false,\n      level: newLevel,\n      gridRow: newRow,\n      parentId: parentId,\n      position: newPosition,\n      isEditing: true,\n      children: []\n    };\n    setGoals(prev => [...prev, newGoal]);\n  };\n  const toggleLevelVisibility = level => {\n    const newHidden = new Set(hiddenLevels);\n    if (newHidden.has(level)) {\n      newHidden.delete(level);\n    } else {\n      newHidden.add(level);\n    }\n    setHiddenLevels(newHidden);\n  };\n  const toggleFocus = goalId => {\n    setFocusedGoal(focusedGoal === goalId ? null : goalId);\n  };\n\n  // Get visible goals based on focus and hidden levels\n  const getVisibleGoals = () => {\n    let visibleGoals = goals.filter(goal => !hiddenLevels.has(goal.level));\n    if (focusedGoal) {\n      const focusedGoalData = goals.find(g => g.id === focusedGoal);\n      if (focusedGoalData) {\n        const relatedGoals = new Set();\n\n        // Add focused goal and its ancestors\n        let current = focusedGoalData;\n        while (current) {\n          relatedGoals.add(current.id);\n          current = goals.find(g => g.id === current.parentId);\n        }\n\n        // Add all descendants\n        const addDescendants = goalId => {\n          const children = goals.filter(g => g.parentId === goalId);\n          children.forEach(child => {\n            relatedGoals.add(child.id);\n            addDescendants(child.id);\n          });\n        };\n        addDescendants(focusedGoal);\n        visibleGoals = visibleGoals.filter(goal => relatedGoals.has(goal.id));\n      }\n    }\n    return visibleGoals;\n  };\n\n  // Add a new root-level goal\n  const addRootGoal = (position = null) => {\n    const newId = Math.max(0, ...goals.map(g => g.id), 0) + 1;\n    const newRow = getNextRowForLevel(0, goals);\n    const newPosition = position || gridToPosition(0, newRow, canvasSize.width);\n    const newGoal = {\n      id: newId,\n      text: '',\n      completed: false,\n      level: 0,\n      gridRow: newRow,\n      parentId: null,\n      position: newPosition,\n      isEditing: true,\n      children: []\n    };\n    setGoals(prev => [...prev, newGoal]);\n  };\n\n  // Canvas event handlers\n  const handleCanvasDoubleClick = e => {\n    // Only add goal if clicking on canvas background, not on existing goals\n    if (e.target === canvasRef.current || e.target.closest('.canvas-background')) {\n      const canvasRect = canvasRef.current.getBoundingClientRect();\n\n      // Calculate position where user double-clicked\n      const mouseX = e.clientX - canvasRect.left - canvasOffset.x;\n      const mouseY = e.clientY - canvasRect.top - canvasOffset.y;\n\n      // Snap to a reasonable position near the click\n      const snapX = Math.max(GRID.MARGIN, mouseX - GRID.CARD_WIDTH / 2);\n      const snapY = Math.max(GRID.MARGIN, mouseY - GRID.CARD_HEIGHT / 2);\n      addRootGoal({\n        x: snapX,\n        y: snapY\n      });\n    }\n  };\n  const handleCanvasMouseDown = e => {\n    // Only start panning if clicking on canvas background, not on a goal\n    if (e.target === canvasRef.current || e.target.closest('.canvas-background')) {\n      setIsPanning(true);\n      setPanStart({\n        x: e.clientX,\n        y: e.clientY\n      });\n      e.preventDefault();\n    }\n  };\n  const handleCanvasMouseMove = e => {\n    if (isPanning) {\n      const deltaX = e.clientX - panStart.x;\n      const deltaY = e.clientY - panStart.y;\n      setCanvasOffset(prev => ({\n        x: prev.x + deltaX,\n        y: prev.y + deltaY\n      }));\n      setPanStart({\n        x: e.clientX,\n        y: e.clientY\n      });\n    }\n\n    // Handle goal dragging\n    if (draggedGoal) {\n      const canvasRect = canvasRef.current.getBoundingClientRect();\n      const mouseX = e.clientX - canvasRect.left - canvasOffset.x - dragOffset.x;\n      const mouseY = e.clientY - canvasRect.top - canvasOffset.y - dragOffset.y;\n      setGoals(goals.map(goal => goal.id === draggedGoal.id ? {\n        ...goal,\n        position: {\n          x: mouseX,\n          y: mouseY\n        }\n      } : goal));\n    }\n  };\n  const handleCanvasMouseUp = () => {\n    setIsPanning(false);\n    setDraggedGoal(null);\n  };\n  const handleCanvasKeyDown = e => {\n    if (e.code === 'Space') {\n      setSpacePressed(true);\n      e.preventDefault();\n    }\n  };\n  const handleCanvasKeyUp = e => {\n    if (e.code === 'Space') {\n      setSpacePressed(false);\n      e.preventDefault();\n    }\n  };\n  const handleGoalDragStart = (goal, e) => {\n    // Prevent canvas panning when starting to drag a goal\n    e.stopPropagation();\n    const canvasRect = canvasRef.current.getBoundingClientRect();\n\n    // Calculate the offset from the mouse to the goal's top-left corner\n    const mouseX = e.clientX - canvasRect.left;\n    const mouseY = e.clientY - canvasRect.top;\n    const goalX = goal.position.x + canvasOffset.x;\n    const goalY = goal.position.y + canvasOffset.y;\n    setDragOffset({\n      x: mouseX - goalX,\n      y: mouseY - goalY\n    });\n    setDraggedGoal(goal);\n  };\n\n  // GoalCard component\n  const GoalCard = ({\n    goal,\n    onUpdate,\n    onToggleComplete,\n    onAddSubGoal,\n    onDelete,\n    onStartEditing,\n    onToggleFocus,\n    isFocused,\n    isDragged,\n    onDragStart\n  }) => {\n    const levelStyle = getLevelStyle(goal.level, goal.completed);\n    const handleMouseDown = e => {\n      // Only start dragging if not clicking on interactive elements\n      const target = e.target;\n      if (target.tagName === 'BUTTON' || target.tagName === 'INPUT' || target.tagName === 'TEXTAREA') {\n        return;\n      }\n\n      // Don't start drag if goal is in editing mode\n      if (goal.isEditing) {\n        return;\n      }\n      onDragStart(goal, e);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `absolute bg-white rounded-xl shadow-lg transition-all duration-300 hover:shadow-xl cursor-move ${levelStyle.border} ${levelStyle.borderWidth} ${levelStyle.bg} ${isDragged ? 'scale-105 rotate-2 z-50' : ''} ${isFocused ? 'ring-4 ring-blue-300' : ''}`,\n      style: {\n        left: goal.position.x,\n        top: goal.position.y,\n        width: GRID.CARD_WIDTH,\n        height: GRID.CARD_HEIGHT,\n        zIndex: isDragged ? 50 : isFocused ? 30 : 10,\n        userSelect: 'none'\n      },\n      onMouseDown: handleMouseDown,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 h-full flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-start mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                onToggleComplete(goal.id);\n              },\n              className: `p-1.5 rounded-full transition-all ${goal.completed ? 'bg-green-500 text-white scale-110' : 'bg-gray-100 border-2 border-gray-300 hover:border-green-400 hover:bg-green-50'}`,\n              children: /*#__PURE__*/_jsxDEV(Check, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                onToggleFocus(goal.id);\n              },\n              className: `p-1.5 rounded-full transition-all ${isFocused ? 'bg-blue-500 text-white' : 'text-gray-400 hover:bg-gray-100 hover:text-blue-500'}`,\n              children: /*#__PURE__*/_jsxDEV(Focus, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                onAddSubGoal(goal.id);\n              },\n              className: \"p-1.5 rounded-full text-purple-500 hover:bg-purple-100 transition-all\",\n              children: /*#__PURE__*/_jsxDEV(Plus, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), goal.level > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                onDelete(goal.id);\n              },\n              className: \"p-1.5 rounded-full text-red-500 hover:bg-red-100 transition-all\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center\",\n          children: goal.isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n            defaultValue: goal.text,\n            className: \"w-full h-16 p-2 border border-gray-200 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm\",\n            placeholder: goal.level === 0 ? \"What's your main goal?\" : \"Describe this task...\",\n            autoFocus: true,\n            onKeyDown: e => {\n              if (e.key === 'Enter' && !e.shiftKey && e.target.value.trim()) {\n                onUpdate(goal.id, e.target.value);\n                e.preventDefault();\n              }\n            },\n            onBlur: e => {\n              if (e.target.value.trim()) {\n                onUpdate(goal.id, e.target.value);\n              } else if (goal.level > 0) {\n                onDelete(goal.id);\n              }\n            },\n            onMouseDown: e => e.stopPropagation() // Prevent drag when editing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `w-full text-sm cursor-text p-2 rounded-lg hover:bg-gray-50 transition-colors ${goal.completed ? 'line-through text-gray-500' : levelStyle.color} ${goal.level === 0 ? 'font-bold' : 'font-medium'}`,\n            onClick: () => onStartEditing(goal.id),\n            children: goal.text || (goal.level === 0 ? \"Click to define your main goal...\" : \"Click to add task...\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render list view component\n  const renderListView = () => {\n    const renderGoalItem = (goal, depth = 0) => {\n      const children = goals.filter(g => g.parentId === goal.id);\n      const levelStyle = getLevelStyle(goal.level, goal.completed);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex items-center gap-3 p-3 rounded-lg border-2 ${levelStyle.border} ${levelStyle.bg} transition-all hover:shadow-md`,\n          style: {\n            marginLeft: `${depth * 24}px`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleComplete(goal.id),\n            className: `p-1 rounded transition-colors ${goal.completed ? 'bg-green-500 text-white' : 'bg-white border-2 border-gray-300 hover:border-green-400'}`,\n            children: /*#__PURE__*/_jsxDEV(Check, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this), goal.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            defaultValue: goal.text,\n            className: \"flex-1 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: goal.level === 0 ? \"What's your main goal?\" : \"Enter task...\",\n            autoFocus: true,\n            onKeyDown: e => {\n              if (e.key === 'Enter' && e.target.value.trim()) {\n                updateGoal(goal.id, e.target.value);\n              }\n            },\n            onBlur: e => {\n              if (e.target.value.trim()) {\n                updateGoal(goal.id, e.target.value);\n              } else if (goal.level > 0) {\n                deleteGoal(goal.id);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `flex-1 cursor-pointer p-2 rounded hover:bg-gray-50 ${goal.completed ? 'line-through text-gray-500' : levelStyle.color} ${goal.level === 0 ? 'font-bold text-lg' : 'font-medium'}`,\n            onClick: () => startEditing(goal.id),\n            children: goal.text || (goal.level === 0 ? \"Click to define your main goal...\" : \"Click to add task...\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addSubGoal(goal.id),\n              className: \"text-purple-600 hover:bg-purple-100 p-1 rounded\",\n              children: /*#__PURE__*/_jsxDEV(Plus, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 15\n            }, this), goal.level > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteGoal(goal.id),\n              className: \"text-red-600 hover:bg-red-100 p-1 rounded\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: children.map(child => renderGoalItem(child, depth + 1))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this)]\n      }, goal.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 max-w-4xl mx-auto\",\n      style: {\n        marginTop: '80px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: goals.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6 border-4 border-dashed border-yellow-300 rounded-xl text-center cursor-pointer hover:border-yellow-400 hover:bg-yellow-50 transition-colors\",\n          onClick: () => {\n            const newGoal = {\n              id: 1,\n              text: '',\n              completed: false,\n              level: 0,\n              gridRow: 0,\n              parentId: null,\n              position: gridToPosition(0, 0, canvasSize.width),\n              children: [],\n              isEditing: true\n            };\n            setGoals([newGoal]);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Target, {\n            className: \"mx-auto mb-3 text-yellow-600\",\n            size: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-yellow-800 mb-2\",\n            children: \"Start Breaking Down Your Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-yellow-700\",\n            children: \"Click here to define your main goal and start breaking it down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }, this) : goals.filter(goal => goal.level === 0).map(rootGoal => renderGoalItem(rootGoal))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Component logic - should be inside the main component function\n  if (!isStarted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-0 left-0 right-0 z-50 bg-white/95 backdrop-blur-sm border-b border-gray-200 shadow-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center px-6 py-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(Target, {\n              className: \"text-yellow-600\",\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-xl font-bold text-gray-800\",\n              children: \"Goal Breaker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this), focusedGoal && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\",\n              children: \"Focus Mode Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center bg-white rounded-lg p-1 shadow-lg border border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentView('canvas'),\n              className: `px-4 py-2 rounded-md text-sm font-medium transition-all ${currentView === 'canvas' ? 'bg-blue-500 text-white shadow-sm' : 'text-gray-600 hover:text-blue-600'}`,\n              children: \"Canvas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentView('list'),\n              className: `px-4 py-2 rounded-md text-sm font-medium transition-all ${currentView === 'list' ? 'bg-blue-500 text-white shadow-sm' : 'text-gray-600 hover:text-blue-600'}`,\n              children: \"List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this), existingLevels.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2 bg-white rounded-xl p-2 shadow-lg border border-gray-200\",\n            children: existingLevels.map(level => {\n              const stats = getLevelStats(level, goals);\n              const isHidden = hiddenLevels.has(level);\n              const levelStyle = getLevelStyle(level, false);\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleLevelVisibility(level),\n                className: `flex items-center gap-2 px-3 py-1.5 rounded-lg transition-all duration-300 transform hover:scale-105 text-sm ${isHidden ? 'bg-gray-200 text-gray-600 hover:bg-gray-300' : `${levelStyle.bg} ${levelStyle.color} ${levelStyle.border} ${levelStyle.borderWidth}`}`,\n                children: [isHidden ? /*#__PURE__*/_jsxDEV(EyeOff, {\n                  size: 12\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 35\n                }, this) : /*#__PURE__*/_jsxDEV(Eye, {\n                  size: 12\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 58\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: getLevelLabel(level)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs bg-white px-2 py-0.5 rounded-full\",\n                  children: [stats.completed, \"/\", stats.total]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 23\n                }, this)]\n              }, level, true, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 bg-gray-100 px-3 py-1 rounded-full\",\n            children: [goals.filter(g => g.completed).length, \" / \", goals.length, \" completed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: reset,\n            className: \"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 7\n    }, this), currentView === 'list' ? renderListView() : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full h-screen overflow-hidden\",\n      style: {\n        marginTop: '80px'\n      },\n      onMouseMove: handleCanvasMouseMove,\n      onMouseUp: handleCanvasMouseUp,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: canvasRef,\n        className: `canvas-background relative select-none ${spacePressed || isPanning ? 'cursor-grabbing' : 'cursor-default'}`,\n        style: {\n          width: canvasSize.width,\n          height: canvasSize.height,\n          transform: `translate(${canvasOffset.x}px, ${canvasOffset.y}px)`,\n          transformOrigin: '0 0',\n          backgroundColor: 'transparent'\n        },\n        onMouseDown: handleCanvasMouseDown,\n        onDoubleClick: handleCanvasDoubleClick,\n        onKeyDown: handleCanvasKeyDown,\n        onKeyUp: handleCanvasKeyUp,\n        tabIndex: 0,\n        children: [/*#__PURE__*/_jsxDEV(ConnectionLines, {\n          connections: connections,\n          canvasSize: canvasSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 13\n        }, this), goals.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute flex items-center justify-center w-96 h-32 bg-gradient-to-br from-yellow-100 to-orange-100 border-4 border-dashed border-yellow-400 rounded-2xl cursor-pointer hover:from-yellow-200 hover:to-orange-200 hover:border-yellow-500 transition-all shadow-lg\",\n          style: {\n            left: canvasSize.width - GRID.MARGIN - GRID.CARD_WIDTH - 48,\n            top: GRID.MARGIN + 50\n          },\n          onClick: () => addRootGoal(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Target, {\n              className: \"mx-auto mb-2 text-yellow-700\",\n              size: 32\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-bold text-yellow-800\",\n              children: \"What's your main goal?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-yellow-700 text-sm\",\n              children: \"Click to start breaking it down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 15\n        }, this) : getVisibleGoals().map(goal => /*#__PURE__*/_jsxDEV(GoalCard, {\n          goal: goal,\n          onUpdate: updateGoal,\n          onToggleComplete: toggleComplete,\n          onAddSubGoal: addSubGoal,\n          onDelete: deleteGoal,\n          onStartEditing: startEditing,\n          onToggleFocus: toggleFocus,\n          isFocused: focusedGoal === goal.id,\n          isDragged: (draggedGoal === null || draggedGoal === void 0 ? void 0 : draggedGoal.id) === goal.id,\n          onDragStart: handleGoalDragStart\n        }, goal.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 17\n        }, this)), goals.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fixed bottom-8 right-8 z-50\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addRootGoal(),\n            className: \"bg-blue-500 hover:bg-blue-600 text-white rounded-full p-4 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105\",\n            title: \"Add new goal (or double-click on canvas)\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 15\n        }, this), goals.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fixed bottom-8 left-8 z-40 bg-white/90 backdrop-blur-sm rounded-lg px-4 py-2 shadow-lg border border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: [\"\\uD83D\\uDCA1 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tip:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 22\n            }, this), \" Double-click anywhere on the canvas to add a new goal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 553,\n    columnNumber: 5\n  }, this);\n};\n_s(GoalBreaker, \"qTpz6TJpZFCi9ItDjNl2BWoiWnM=\");\n_c = GoalBreaker;\nexport default GoalBreaker;\nvar _c;\n$RefreshReg$(_c, \"GoalBreaker\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Plus","Check","X","Target","Eye","EyeOff","Focus","ConnectionLines","gridToPosition","getNextRowForLevel","GRID","getLevelStyle","getLevelStats","getLevelLabel","jsxDEV","_jsxDEV","GoalBreaker","_s","goals","setGoals","mainGoal","setMainGoal","isStarted","setIsStarted","currentView","setCurrentView","draggedGoal","setDraggedGoal","dragOffset","setDragOffset","x","y","connections","setConnections","hiddenLevels","setHiddenLevels","Set","focusedGoal","setFocusedGoal","canvasOffset","setCanvasOffset","isPanning","setIsPanning","panStart","setPanStart","spacePressed","setSpacePressed","canvasRef","canvasSize","setCanvasSize","width","height","viewportWidth","window","innerWidth","viewportHeight","innerHeight","centerX","CARD_WIDTH","centerY","CARD_HEIGHT","newConnections","forEach","goal","parentId","parent","find","g","id","fromX","position","fromY","Math","max","toX","toY","midX","midY","curveOffset","abs","controlY","push","from","to","completed","path","existingLevels","map","level","sort","updateGoal","newText","text","isEditing","startEditing","toggleComplete","deleteGoal","filter","reset","addSubGoal","newId","newLevel","newRow","newPosition","newGoal","gridRow","children","prev","toggleLevelVisibility","newHidden","has","delete","add","toggleFocus","goalId","getVisibleGoals","visibleGoals","focusedGoalData","relatedGoals","current","addDescendants","child","addRootGoal","handleCanvasDoubleClick","e","target","closest","canvasRect","getBoundingClientRect","mouseX","clientX","left","mouseY","clientY","top","snapX","MARGIN","snapY","handleCanvasMouseDown","preventDefault","handleCanvasMouseMove","deltaX","deltaY","handleCanvasMouseUp","handleCanvasKeyDown","code","handleCanvasKeyUp","handleGoalDragStart","stopPropagation","goalX","goalY","GoalCard","onUpdate","onToggleComplete","onAddSubGoal","onDelete","onStartEditing","onToggleFocus","isFocused","isDragged","onDragStart","levelStyle","handleMouseDown","tagName","className","border","borderWidth","bg","style","zIndex","userSelect","onMouseDown","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","placeholder","autoFocus","onKeyDown","key","shiftKey","value","trim","onBlur","color","renderListView","renderGoalItem","depth","marginLeft","type","length","marginTop","rootGoal","stats","isHidden","total","onMouseMove","onMouseUp","ref","transform","transformOrigin","backgroundColor","onDoubleClick","onKeyUp","tabIndex","title","_c","$RefreshReg$"],"sources":["C:/apps/goal-breaker/src/components/GoalBreakdown/index.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { Plus, Check, X, Target, Edit3, Move, Eye, EyeOff, Focus } from 'lucide-react';\r\nimport { ConnectionLines } from '../ConnectionLines';\r\nimport { gridToPosition, getNextRowForLevel, GRID } from '../../utils/gridHelpers';\r\nimport { getLevelStyle, getLevelStats, getLevelLabel } from '../../utils/styleHelpers';\r\n\r\nconst GoalBreaker = () => {\r\n  const [goals, setGoals] = useState([]);\r\n  const [mainGoal, setMainGoal] = useState('');\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  const [currentView, setCurrentView] = useState('canvas'); // 'canvas' or 'list'\r\n  const [draggedGoal, setDraggedGoal] = useState(null);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [connections, setConnections] = useState([]);\r\n  const [hiddenLevels, setHiddenLevels] = useState(new Set());\r\n  const [focusedGoal, setFocusedGoal] = useState(null);\r\n  const [canvasOffset, setCanvasOffset] = useState({ x: 0, y: 0 });\r\n  const [isPanning, setIsPanning] = useState(false);\r\n  const [panStart, setPanStart] = useState({ x: 0, y: 0 });\r\n  const [spacePressed, setSpacePressed] = useState(false);\r\n  const canvasRef = useRef(null);\r\n  const [canvasSize, setCanvasSize] = useState({ width: 2000, height: 1200 });\r\n\r\n\r\n\r\n  // Initialize with empty state - user defines problem directly on canvas\r\n  useEffect(() => {\r\n    if (!isStarted) {\r\n      setIsStarted(true);\r\n      // Center the canvas so main goal area is immediately visible\r\n      const viewportWidth = window.innerWidth;\r\n      const viewportHeight = window.innerHeight - 80; // Account for header\r\n      const centerX = viewportWidth / 2 - GRID.CARD_WIDTH / 2;\r\n      const centerY = viewportHeight / 2 - GRID.CARD_HEIGHT / 2;\r\n      \r\n      setCanvasOffset({\r\n        x: -centerX + viewportWidth / 2,\r\n        y: -centerY + viewportHeight / 2\r\n      });\r\n    }\r\n  }, [isStarted]);\r\n\r\n  useEffect(() => {\r\n    const newConnections = [];\r\n    goals.forEach(goal => {\r\n      if (goal.parentId !== null) {\r\n        const parent = goals.find(g => g.id === goal.parentId);\r\n        if (parent) {\r\n          const fromX = parent.position.x + GRID.CARD_WIDTH / 2;\r\n          const fromY = Math.max(0, parent.position.y + GRID.CARD_HEIGHT);\r\n          const toX = goal.position.x + GRID.CARD_WIDTH / 2;\r\n          const toY = Math.max(0, goal.position.y);\r\n          \r\n          // Create curved connection line with bounds checking\r\n          const midX = fromX + (toX - fromX) / 2;\r\n          const midY = fromY + (toY - fromY) / 2;\r\n          const curveOffset = Math.abs(toX - fromX) * 0.3;\r\n          \r\n          // Ensure the curve control point stays reasonable\r\n          const controlY = Math.max(0, midY - curveOffset);\r\n          \r\n          newConnections.push({\r\n            id: `${parent.id}-${goal.id}`,\r\n            from: { x: fromX, y: fromY },\r\n            to: { x: toX, y: toY },\r\n            completed: parent.completed && goal.completed,\r\n            path: `M ${fromX} ${fromY} Q ${midX} ${controlY} ${toX} ${toY}`\r\n          });\r\n        }\r\n      }\r\n    });\r\n    setConnections(newConnections);\r\n  }, [goals, GRID.CARD_WIDTH, GRID.CARD_HEIGHT]);\r\n\r\n  // Calculate existing levels from goals array\r\n  const existingLevels = [...new Set(goals.map(goal => goal.level))].sort();\r\n\r\n  // Goal management functions\r\n  const updateGoal = (id, newText) => {\r\n    setGoals(goals.map(goal => \r\n      goal.id === id \r\n        ? { ...goal, text: newText, isEditing: false }\r\n        : goal\r\n    ));\r\n  };\r\n\r\n  const startEditing = (id) => {\r\n    setGoals(goals.map(goal => \r\n      goal.id === id \r\n        ? { ...goal, isEditing: true }\r\n        : goal\r\n    ));\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    setGoals(goals.map(goal => \r\n      goal.id === id \r\n        ? { ...goal, completed: !goal.completed }\r\n        : goal\r\n    ));\r\n  };\r\n\r\n  const deleteGoal = (id) => {\r\n    setGoals(goals.filter(goal => goal.id !== id && goal.parentId !== id));\r\n  };\r\n\r\n  const reset = () => {\r\n    setGoals([]);\r\n    setMainGoal('');\r\n    setCanvasOffset({ x: 0, y: 0 });\r\n  };\r\n\r\n  const addSubGoal = (parentId) => {\r\n    const parent = goals.find(g => g.id === parentId);\r\n    if (!parent) return;\r\n\r\n    const newId = Math.max(0, ...goals.map(g => g.id), 0) + 1;\r\n    const newLevel = parent.level + 1;\r\n    const newRow = getNextRowForLevel(newLevel, goals);\r\n    const newPosition = gridToPosition(newLevel, newRow, canvasSize.width);\r\n\r\n    const newGoal = {\r\n      id: newId,\r\n      text: '',\r\n      completed: false,\r\n      level: newLevel,\r\n      gridRow: newRow,\r\n      parentId: parentId,\r\n      position: newPosition,\r\n      isEditing: true,\r\n      children: []\r\n    };\r\n\r\n    setGoals(prev => [...prev, newGoal]);\r\n  };\r\n\r\n  const toggleLevelVisibility = (level) => {\r\n    const newHidden = new Set(hiddenLevels);\r\n    if (newHidden.has(level)) {\r\n      newHidden.delete(level);\r\n    } else {\r\n      newHidden.add(level);\r\n    }\r\n    setHiddenLevels(newHidden);\r\n  };\r\n\r\n  const toggleFocus = (goalId) => {\r\n    setFocusedGoal(focusedGoal === goalId ? null : goalId);\r\n  };\r\n\r\n  // Get visible goals based on focus and hidden levels\r\n  const getVisibleGoals = () => {\r\n    let visibleGoals = goals.filter(goal => !hiddenLevels.has(goal.level));\r\n    \r\n    if (focusedGoal) {\r\n      const focusedGoalData = goals.find(g => g.id === focusedGoal);\r\n      if (focusedGoalData) {\r\n        const relatedGoals = new Set();\r\n        \r\n        // Add focused goal and its ancestors\r\n        let current = focusedGoalData;\r\n        while (current) {\r\n          relatedGoals.add(current.id);\r\n          current = goals.find(g => g.id === current.parentId);\r\n        }\r\n        \r\n        // Add all descendants\r\n        const addDescendants = (goalId) => {\r\n          const children = goals.filter(g => g.parentId === goalId);\r\n          children.forEach(child => {\r\n            relatedGoals.add(child.id);\r\n            addDescendants(child.id);\r\n          });\r\n        };\r\n        addDescendants(focusedGoal);\r\n        \r\n        visibleGoals = visibleGoals.filter(goal => relatedGoals.has(goal.id));\r\n      }\r\n    }\r\n    \r\n    return visibleGoals;\r\n  };\r\n\r\n  // Add a new root-level goal\r\n  const addRootGoal = (position = null) => {\r\n    const newId = Math.max(0, ...goals.map(g => g.id), 0) + 1;\r\n    const newRow = getNextRowForLevel(0, goals);\r\n    const newPosition = position || gridToPosition(0, newRow, canvasSize.width);\r\n\r\n    const newGoal = {\r\n      id: newId,\r\n      text: '',\r\n      completed: false,\r\n      level: 0,\r\n      gridRow: newRow,\r\n      parentId: null,\r\n      position: newPosition,\r\n      isEditing: true,\r\n      children: []\r\n    };\r\n\r\n    setGoals(prev => [...prev, newGoal]);\r\n  };\r\n\r\n  // Canvas event handlers\r\n  const handleCanvasDoubleClick = (e) => {\r\n    // Only add goal if clicking on canvas background, not on existing goals\r\n    if (e.target === canvasRef.current || e.target.closest('.canvas-background')) {\r\n      const canvasRect = canvasRef.current.getBoundingClientRect();\r\n      \r\n      // Calculate position where user double-clicked\r\n      const mouseX = e.clientX - canvasRect.left - canvasOffset.x;\r\n      const mouseY = e.clientY - canvasRect.top - canvasOffset.y;\r\n      \r\n      // Snap to a reasonable position near the click\r\n      const snapX = Math.max(GRID.MARGIN, mouseX - GRID.CARD_WIDTH / 2);\r\n      const snapY = Math.max(GRID.MARGIN, mouseY - GRID.CARD_HEIGHT / 2);\r\n      \r\n      addRootGoal({ x: snapX, y: snapY });\r\n    }\r\n  };\r\n\r\n  const handleCanvasMouseDown = (e) => {\r\n    // Only start panning if clicking on canvas background, not on a goal\r\n    if (e.target === canvasRef.current || e.target.closest('.canvas-background')) {\r\n      setIsPanning(true);\r\n      setPanStart({ x: e.clientX, y: e.clientY });\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  const handleCanvasMouseMove = (e) => {\r\n    if (isPanning) {\r\n      const deltaX = e.clientX - panStart.x;\r\n      const deltaY = e.clientY - panStart.y;\r\n      setCanvasOffset(prev => ({\r\n        x: prev.x + deltaX,\r\n        y: prev.y + deltaY\r\n      }));\r\n      setPanStart({ x: e.clientX, y: e.clientY });\r\n    }\r\n    \r\n    // Handle goal dragging\r\n    if (draggedGoal) {\r\n      const canvasRect = canvasRef.current.getBoundingClientRect();\r\n      const mouseX = e.clientX - canvasRect.left - canvasOffset.x - dragOffset.x;\r\n      const mouseY = e.clientY - canvasRect.top - canvasOffset.y - dragOffset.y;\r\n\r\n      setGoals(goals.map(goal => \r\n        goal.id === draggedGoal.id \r\n          ? { ...goal, position: { x: mouseX, y: mouseY } }\r\n          : goal\r\n      ));\r\n    }\r\n  };\r\n\r\n  const handleCanvasMouseUp = () => {\r\n    setIsPanning(false);\r\n    setDraggedGoal(null);\r\n  };\r\n\r\n  const handleCanvasKeyDown = (e) => {\r\n    if (e.code === 'Space') {\r\n      setSpacePressed(true);\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  const handleCanvasKeyUp = (e) => {\r\n    if (e.code === 'Space') {\r\n      setSpacePressed(false);\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  const handleGoalDragStart = (goal, e) => {\r\n    // Prevent canvas panning when starting to drag a goal\r\n    e.stopPropagation();\r\n    \r\n    const canvasRect = canvasRef.current.getBoundingClientRect();\r\n    \r\n    // Calculate the offset from the mouse to the goal's top-left corner\r\n    const mouseX = e.clientX - canvasRect.left;\r\n    const mouseY = e.clientY - canvasRect.top;\r\n    \r\n    const goalX = goal.position.x + canvasOffset.x;\r\n    const goalY = goal.position.y + canvasOffset.y;\r\n    \r\n    setDragOffset({\r\n      x: mouseX - goalX,\r\n      y: mouseY - goalY\r\n    });\r\n    \r\n    setDraggedGoal(goal);\r\n  };\r\n\r\n  // GoalCard component\r\n  const GoalCard = ({ goal, onUpdate, onToggleComplete, onAddSubGoal, onDelete, onStartEditing, onToggleFocus, isFocused, isDragged, onDragStart }) => {\r\n    const levelStyle = getLevelStyle(goal.level, goal.completed);\r\n    \r\n    const handleMouseDown = (e) => {\r\n      // Only start dragging if not clicking on interactive elements\r\n      const target = e.target;\r\n      if (target.tagName === 'BUTTON' || target.tagName === 'INPUT' || target.tagName === 'TEXTAREA') {\r\n        return;\r\n      }\r\n      \r\n      // Don't start drag if goal is in editing mode\r\n      if (goal.isEditing) {\r\n        return;\r\n      }\r\n      \r\n      onDragStart(goal, e);\r\n    };\r\n    \r\n    return (\r\n      <div\r\n        className={`absolute bg-white rounded-xl shadow-lg transition-all duration-300 hover:shadow-xl cursor-move ${levelStyle.border} ${levelStyle.borderWidth} ${levelStyle.bg} ${\r\n          isDragged ? 'scale-105 rotate-2 z-50' : ''\r\n        } ${isFocused ? 'ring-4 ring-blue-300' : ''}`}\r\n        style={{\r\n          left: goal.position.x,\r\n          top: goal.position.y,\r\n          width: GRID.CARD_WIDTH,\r\n          height: GRID.CARD_HEIGHT,\r\n          zIndex: isDragged ? 50 : isFocused ? 30 : 10,\r\n          userSelect: 'none'\r\n        }}\r\n        onMouseDown={handleMouseDown}\r\n      >\r\n        <div className=\"p-4 h-full flex flex-col\">\r\n          {/* Card Header */}\r\n          <div className=\"flex justify-between items-start mb-3\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  onToggleComplete(goal.id);\r\n                }}\r\n                className={`p-1.5 rounded-full transition-all ${\r\n                  goal.completed \r\n                    ? 'bg-green-500 text-white scale-110' \r\n                    : 'bg-gray-100 border-2 border-gray-300 hover:border-green-400 hover:bg-green-50'\r\n                }`}\r\n              >\r\n                <Check size={12} />\r\n              </button>\r\n              \r\n\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-1\">\r\n              <button\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  onToggleFocus(goal.id);\r\n                }}\r\n                className={`p-1.5 rounded-full transition-all ${\r\n                  isFocused \r\n                    ? 'bg-blue-500 text-white' \r\n                    : 'text-gray-400 hover:bg-gray-100 hover:text-blue-500'\r\n                }`}\r\n              >\r\n                <Focus size={12} />\r\n              </button>\r\n              \r\n              <button\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  onAddSubGoal(goal.id);\r\n                }}\r\n                className=\"p-1.5 rounded-full text-purple-500 hover:bg-purple-100 transition-all\"\r\n              >\r\n                <Plus size={12} />\r\n              </button>\r\n              \r\n              {goal.level > 0 && (\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    onDelete(goal.id);\r\n                  }}\r\n                  className=\"p-1.5 rounded-full text-red-500 hover:bg-red-100 transition-all\"\r\n                >\r\n                  <X size={12} />\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Card Content */}\r\n          <div className=\"flex-1 flex items-center\">\r\n            {goal.isEditing ? (\r\n              <textarea\r\n                defaultValue={goal.text}\r\n                className=\"w-full h-16 p-2 border border-gray-200 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm\"\r\n                placeholder={goal.level === 0 ? \"What's your main goal?\" : \"Describe this task...\"}\r\n                autoFocus\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter' && !e.shiftKey && e.target.value.trim()) {\r\n                    onUpdate(goal.id, e.target.value);\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n                onBlur={(e) => {\r\n                  if (e.target.value.trim()) {\r\n                    onUpdate(goal.id, e.target.value);\r\n                  } else if (goal.level > 0) {\r\n                    onDelete(goal.id);\r\n                  }\r\n                }}\r\n                onMouseDown={(e) => e.stopPropagation()} // Prevent drag when editing\r\n              />\r\n            ) : (\r\n              <p \r\n                className={`w-full text-sm cursor-text p-2 rounded-lg hover:bg-gray-50 transition-colors ${\r\n                  goal.completed ? 'line-through text-gray-500' : levelStyle.color\r\n                } ${goal.level === 0 ? 'font-bold' : 'font-medium'}`}\r\n                onClick={() => onStartEditing(goal.id)}\r\n              >\r\n                {goal.text || (goal.level === 0 ? \"Click to define your main goal...\" : \"Click to add task...\")}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Render list view component\r\n  const renderListView = () => {\r\n    const renderGoalItem = (goal, depth = 0) => {\r\n      const children = goals.filter(g => g.parentId === goal.id);\r\n      const levelStyle = getLevelStyle(goal.level, goal.completed);\r\n      \r\n      return (\r\n        <div key={goal.id} className=\"space-y-2\">\r\n          <div \r\n            className={`flex items-center gap-3 p-3 rounded-lg border-2 ${levelStyle.border} ${levelStyle.bg} transition-all hover:shadow-md`}\r\n            style={{ marginLeft: `${depth * 24}px` }}\r\n          >\r\n            <button\r\n              onClick={() => toggleComplete(goal.id)}\r\n              className={`p-1 rounded transition-colors ${\r\n                goal.completed \r\n                  ? 'bg-green-500 text-white' \r\n                  : 'bg-white border-2 border-gray-300 hover:border-green-400'\r\n              }`}\r\n            >\r\n              <Check size={14} />\r\n            </button>\r\n            \r\n            {goal.isEditing ? (\r\n              <input\r\n                type=\"text\"\r\n                defaultValue={goal.text}\r\n                className=\"flex-1 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder={goal.level === 0 ? \"What's your main goal?\" : \"Enter task...\"}\r\n                autoFocus\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter' && e.target.value.trim()) {\r\n                    updateGoal(goal.id, e.target.value);\r\n                  }\r\n                }}\r\n                onBlur={(e) => {\r\n                  if (e.target.value.trim()) {\r\n                    updateGoal(goal.id, e.target.value);\r\n                  } else if (goal.level > 0) {\r\n                    deleteGoal(goal.id);\r\n                  }\r\n                }}\r\n              />\r\n            ) : (\r\n              <p \r\n                className={`flex-1 cursor-pointer p-2 rounded hover:bg-gray-50 ${\r\n                  goal.completed ? 'line-through text-gray-500' : levelStyle.color\r\n                } ${goal.level === 0 ? 'font-bold text-lg' : 'font-medium'}`}\r\n                onClick={() => startEditing(goal.id)}\r\n              >\r\n                {goal.text || (goal.level === 0 ? \"Click to define your main goal...\" : \"Click to add task...\")}\r\n              </p>\r\n            )}\r\n            \r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                onClick={() => addSubGoal(goal.id)}\r\n                className=\"text-purple-600 hover:bg-purple-100 p-1 rounded\"\r\n              >\r\n                <Plus size={16} />\r\n              </button>\r\n              \r\n              {goal.level > 0 && (\r\n                <button\r\n                  onClick={() => deleteGoal(goal.id)}\r\n                  className=\"text-red-600 hover:bg-red-100 p-1 rounded\"\r\n                >\r\n                  <X size={16} />\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {children.length > 0 && (\r\n            <div className=\"space-y-2\">\r\n              {children.map(child => renderGoalItem(child, depth + 1))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className=\"p-6 max-w-4xl mx-auto\" style={{ marginTop: '80px' }}>\r\n        <div className=\"space-y-4\">\r\n          {goals.length === 0 ? (\r\n            <div \r\n              className=\"p-6 border-4 border-dashed border-yellow-300 rounded-xl text-center cursor-pointer hover:border-yellow-400 hover:bg-yellow-50 transition-colors\"\r\n              onClick={() => {\r\n                const newGoal = {\r\n                  id: 1,\r\n                  text: '',\r\n                  completed: false,\r\n                  level: 0,\r\n                  gridRow: 0,\r\n                  parentId: null,\r\n                  position: gridToPosition(0, 0, canvasSize.width),\r\n                  children: [],\r\n                  isEditing: true\r\n                };\r\n                setGoals([newGoal]);\r\n              }}\r\n            >\r\n              <Target className=\"mx-auto mb-3 text-yellow-600\" size={48} />\r\n              <h2 className=\"text-xl font-bold text-yellow-800 mb-2\">Start Breaking Down Your Goal</h2>\r\n              <p className=\"text-yellow-700\">Click here to define your main goal and start breaking it down</p>\r\n            </div>\r\n          ) : (\r\n            goals\r\n              .filter(goal => goal.level === 0)\r\n              .map(rootGoal => renderGoalItem(rootGoal))\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Component logic - should be inside the main component function\r\n  if (!isStarted) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 overflow-hidden\">\r\n      {/* Header */}\r\n      <div className=\"fixed top-0 left-0 right-0 z-50 bg-white/95 backdrop-blur-sm border-b border-gray-200 shadow-sm\">\r\n        <div className=\"flex justify-between items-center px-6 py-4\">\r\n          <div className=\"flex items-center gap-6\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <Target className=\"text-yellow-600\" size={24} />\r\n              <h1 className=\"text-xl font-bold text-gray-800\">Goal Breaker</h1>\r\n              {focusedGoal && (\r\n                <div className=\"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\">\r\n                  Focus Mode Active\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* View Toggle */}\r\n            <div className=\"flex items-center bg-white rounded-lg p-1 shadow-lg border border-gray-200\">\r\n              <button\r\n                onClick={() => setCurrentView('canvas')}\r\n                className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${\r\n                  currentView === 'canvas' \r\n                    ? 'bg-blue-500 text-white shadow-sm' \r\n                    : 'text-gray-600 hover:text-blue-600'\r\n                }`}\r\n              >\r\n                Canvas\r\n              </button>\r\n              <button\r\n                onClick={() => setCurrentView('list')}\r\n                className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${\r\n                  currentView === 'list' \r\n                    ? 'bg-blue-500 text-white shadow-sm' \r\n                    : 'text-gray-600 hover:text-blue-600'\r\n                }`}\r\n              >\r\n                List\r\n              </button>\r\n            </div>\r\n\r\n            {/* Level Navigation */}\r\n            {existingLevels.length > 1 && (\r\n              <div className=\"flex items-center gap-2 bg-white rounded-xl p-2 shadow-lg border border-gray-200\">\r\n                {existingLevels.map(level => {\r\n                  const stats = getLevelStats(level, goals);\r\n                  const isHidden = hiddenLevels.has(level);\r\n                  const levelStyle = getLevelStyle(level, false);\r\n                  \r\n                  return (\r\n                    <button\r\n                      key={level}\r\n                      onClick={() => toggleLevelVisibility(level)}\r\n                      className={`flex items-center gap-2 px-3 py-1.5 rounded-lg transition-all duration-300 transform hover:scale-105 text-sm ${\r\n                        isHidden \r\n                          ? 'bg-gray-200 text-gray-600 hover:bg-gray-300' \r\n                          : `${levelStyle.bg} ${levelStyle.color} ${levelStyle.border} ${levelStyle.borderWidth}`\r\n                      }`}\r\n                    >\r\n                      {isHidden ? <EyeOff size={12} /> : <Eye size={12} />}\r\n                      <span className=\"font-medium\">{getLevelLabel(level)}</span>\r\n                      <span className=\"text-xs bg-white px-2 py-0.5 rounded-full\">\r\n                        {stats.completed}/{stats.total}\r\n                      </span>\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"text-sm text-gray-600 bg-gray-100 px-3 py-1 rounded-full\">\r\n              {goals.filter(g => g.completed).length} / {goals.length} completed\r\n            </div>\r\n            <button\r\n              onClick={reset}\r\n              className=\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors\"\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content - Canvas or List View */}\r\n      {currentView === 'list' ? (\r\n        renderListView()\r\n      ) : (\r\n        <div \r\n          className=\"relative w-full h-screen overflow-hidden\"\r\n          style={{ marginTop: '80px' }}\r\n          onMouseMove={handleCanvasMouseMove}\r\n          onMouseUp={handleCanvasMouseUp}\r\n        >\r\n          {/* Canvas Content */}\r\n          <div\r\n            ref={canvasRef}\r\n            className={`canvas-background relative select-none ${spacePressed || isPanning ? 'cursor-grabbing' : 'cursor-default'}`}\r\n            style={{\r\n              width: canvasSize.width,\r\n              height: canvasSize.height,\r\n              transform: `translate(${canvasOffset.x}px, ${canvasOffset.y}px)`,\r\n              transformOrigin: '0 0',\r\n              backgroundColor: 'transparent'\r\n            }}\r\n            onMouseDown={handleCanvasMouseDown}\r\n            onDoubleClick={handleCanvasDoubleClick}\r\n            onKeyDown={handleCanvasKeyDown}\r\n            onKeyUp={handleCanvasKeyUp}\r\n            tabIndex={0}\r\n          >\r\n            {/* Connection Lines */}\r\n            <ConnectionLines connections={connections} canvasSize={canvasSize} />\r\n            \r\n            {/* Goals */}\r\n            {goals.length === 0 ? (\r\n              <div \r\n                className=\"absolute flex items-center justify-center w-96 h-32 bg-gradient-to-br from-yellow-100 to-orange-100 border-4 border-dashed border-yellow-400 rounded-2xl cursor-pointer hover:from-yellow-200 hover:to-orange-200 hover:border-yellow-500 transition-all shadow-lg\"\r\n                style={{\r\n                  left: canvasSize.width - GRID.MARGIN - GRID.CARD_WIDTH - 48,\r\n                  top: GRID.MARGIN + 50\r\n                }}\r\n                onClick={() => addRootGoal()}\r\n              >\r\n                <div className=\"text-center\">\r\n                  <Target className=\"mx-auto mb-2 text-yellow-700\" size={32} />\r\n                  <h2 className=\"text-lg font-bold text-yellow-800\">What's your main goal?</h2>\r\n                  <p className=\"text-yellow-700 text-sm\">Click to start breaking it down</p>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              getVisibleGoals().map(goal => (\r\n                <GoalCard\r\n                  key={goal.id}\r\n                  goal={goal}\r\n                  onUpdate={updateGoal}\r\n                  onToggleComplete={toggleComplete}\r\n                  onAddSubGoal={addSubGoal}\r\n                  onDelete={deleteGoal}\r\n                  onStartEditing={startEditing}\r\n                  onToggleFocus={toggleFocus}\r\n                  isFocused={focusedGoal === goal.id}\r\n                  isDragged={draggedGoal?.id === goal.id}\r\n                  onDragStart={handleGoalDragStart}\r\n                />\r\n              ))\r\n            )}\r\n            \r\n            {/* Floating Add Button - only show if there are existing goals */}\r\n            {goals.length > 0 && (\r\n              <div \r\n                className=\"fixed bottom-8 right-8 z-50\"\r\n              >\r\n                <button\r\n                  onClick={() => addRootGoal()}\r\n                  className=\"bg-blue-500 hover:bg-blue-600 text-white rounded-full p-4 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105\"\r\n                  title=\"Add new goal (or double-click on canvas)\"\r\n                >\r\n                  <Plus size={24} />\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Instructions text when there are existing goals */}\r\n            {goals.length > 0 && (\r\n              <div className=\"fixed bottom-8 left-8 z-40 bg-white/90 backdrop-blur-sm rounded-lg px-4 py-2 shadow-lg border border-gray-200\">\r\n                <p className=\"text-sm text-gray-600\">\r\n                  💡 <strong>Tip:</strong> Double-click anywhere on the canvas to add a new goal\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoalBreaker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}