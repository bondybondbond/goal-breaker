import React from "react"; import { Eye, EyeOff } from "lucide-react"; import { Goal } from "../types/goal.types"; import { getLevelStyle, getLevelStats, getLevelLabel } from "../utils/styleHelpers"; interface LevelNavigationProps { goals: Goal[]; hiddenLevels: Set<number>; onToggleLevel: (level: number) => void; } export const LevelNavigation: React.FC<LevelNavigationProps> = ({ goals, hiddenLevels, onToggleLevel }) => { const existingLevels = [...new Set(goals.map(g => g.level))].sort((a, b) => a - b); if (existingLevels.length <= 1) return null; return ( <div className="flex items-center gap-2 bg-white rounded-xl p-2 shadow-lg border border-gray-200"> {existingLevels.map(level => { const stats = getLevelStats(level, goals); const isHidden = hiddenLevels.has(level); const levelStyle = getLevelStyle(level, false); return ( <button key={level} onClick={() => onToggleLevel(level)} className={`flex items-center gap-2 px-3 py-1.5 rounded-lg transition-all duration-300 transform hover:scale-105 text-sm ${ isHidden ? "bg-gray-200 text-gray-600 hover:bg-gray-300" : `${levelStyle.bg} ${levelStyle.color} ${levelStyle.border} ${levelStyle.borderWidth}` }`} > {isHidden ? <EyeOff size={12} /> : <Eye size={12} />} <span className="font-medium">{getLevelLabel(level)}</span> <span className="text-xs bg-white px-2 py-0.5 rounded-full"> {stats.completed}/{stats.total} </span> </button> ); })} </div> ); };
